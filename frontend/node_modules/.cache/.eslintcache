[{"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/index.tsx":"1","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/App.tsx":"2","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/routes.tsx":"3","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/Dashboard.tsx":"4","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/login.tsx":"5","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/home.tsx":"6","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/Create_template.tsx":"7","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/TemplateView.tsx":"8","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/Template.tsx":"9","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/register.tsx":"10","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/utils/csrf.ts":"11","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/components/ConnectionsPanel.tsx":"12","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/components/AccessManager.tsx":"13"},{"size":319,"mtime":1745062432486,"results":"14","hashOfConfig":"15"},{"size":231,"mtime":1745062432449,"results":"16","hashOfConfig":"15"},{"size":1275,"mtime":1746168251751,"results":"17","hashOfConfig":"15"},{"size":6819,"mtime":1745404393818,"results":"18","hashOfConfig":"15"},{"size":3801,"mtime":1746081497037,"results":"19","hashOfConfig":"15"},{"size":13096,"mtime":1746159265407,"results":"20","hashOfConfig":"15"},{"size":111256,"mtime":1746170635868,"results":"21","hashOfConfig":"15"},{"size":4283,"mtime":1746159764186,"results":"22","hashOfConfig":"15"},{"size":10263,"mtime":1745211105919,"results":"23","hashOfConfig":"15"},{"size":9154,"mtime":1745062432487,"results":"24","hashOfConfig":"15"},{"size":1084,"mtime":1746079464888,"results":"25","hashOfConfig":"15"},{"size":10716,"mtime":1745214534000,"results":"26","hashOfConfig":"15"},{"size":21736,"mtime":1745214534000,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"143jhuv",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/index.tsx",[],["58","59"],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/App.tsx",[],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/routes.tsx",[],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/Dashboard.tsx",[],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/login.tsx",[],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/home.tsx",["60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89"],"import type React from \"react\";\nimport \"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/assets/styles.css\";\nimport { Menu } from \"lucide-react\";\nimport { useParams, Link } from \"react-router-dom\";\n\n// Import the icon images and video from the assets folder\nimport createIcon from \"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/assets/img/create.png\";\nimport conductIcon from \"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/assets/img/conduct.png\";\nimport analyzeIcon from \"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/assets/img/analyze.png\"; // Ensure this is a PNG with transparency\nimport qr from \"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/assets/img/qr.png\";\nimport headerVideo from \"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/assets/img/head1.mp4\";\n//import appStoreBadge from \"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/assets/img/app-store-badge.svg\";\n//import googlePlayBadge from \"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/assets/img/google-play-badge.svg\";\n\nconst Home2: React.FC = () => {\n  return (\n    <div className=\"home-container\">\n      <header className=\"header\">\n        <button className=\"menu-button\">\n          <Menu size={24} />\n        </button>\n        <div className=\"logo\">FASHCOGNITIVE</div>\n        <div className=\"auth-buttons\">\n        <Link to=\"/login\" className=\"login-button1\">Log in</Link>\n        <Link to=\"/register\" className=\"signup-button1\">Sign up for free</Link>\n\n        </div>\n      </header>\n\n      <nav className=\"navigation\">\n        <ul>\n          <li className=\"nav-item\">\n            Product <span className=\"dropdown-arrow\">▼</span>\n          </li>\n          <li className=\"nav-item\">\n            Solutions <span className=\"dropdown-arrow\">▼</span>\n          </li>\n          <li className=\"nav-item\">\n            Support <span className=\"dropdown-arrow\">▼</span>\n          </li>\n          <li className=\"nav-item\">Customers</li>\n          <li className=\"nav-item\">Pricing</li>\n        </ul>\n      </nav>\n\n      <section className=\"hero-section\">\n        <video className=\"hero-video\" autoPlay muted loop>\n          <source src={headerVideo} type=\"video/mp4\" />\n          Your browser does not support the video tag.\n        </video>\n        <div className=\"hero-content\">\n          <h1 className=\"hero-title\">\n            Conduct Inspections\n            <br />\n            Anytime, Anywhere\n            <br />\n            Anyplace\n          </h1>\n          <div className=\"feature-boxes\">\n            <div className=\"feature-box\">\n              <img src={createIcon} alt=\"Create & Customize Inspections Icon\" className=\"feature-box-icon\" />\n              <div className=\"feature-box-text\">Create & Customize Inspections</div>\n            </div>\n            <div className=\"feature-box\">\n              <img src={conductIcon} alt=\"Conduct Inspections & Collect Data Icon\" className=\"feature-box-icon\" />\n              <div className=\"feature-box-text\">Conduct Inspections & Collect Data</div>\n            </div>\n            <div className=\"feature-box\">\n              <img src={analyzeIcon} alt=\"Analyze & Take Action Icon\" className=\"feature-box-icon\" />\n              <div className=\"feature-box-text\">Analyze & Take Action</div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"reports-section\">\n        <div className=\"reports-content\">\n          <div className=\"reports-images\">\n            <div className=\"mobile-report-image\">\n              <div className=\"report-mockup\">\n                <div className=\"report-header\">\n                  <div className=\"report-title\">\n                    BRANDED\n                    <br />\n                    REPORT\n                  </div>\n                </div>\n                <div className=\"dashboard-chart\">\n                  <div className=\"chart-placeholder\">\n                    <div className=\"chart-bar chart-bar-1\"></div>\n                    <div className=\"chart-bar chart-bar-2\"></div>\n                    <div className=\"chart-bar chart-bar-3\"></div>\n                    <div className=\"chart-bar chart-bar-4\"></div>\n                  </div>\n                </div>\n                <button className=\"purple-button\">Button</button>\n              </div>\n            </div>\n            <div className=\"desktop-report-image\">\n              <div className=\"desktop-dashboard\">\n                <div className=\"chart-header\">\n                  <div className=\"chart-title\">Inspection Results</div>\n                  <div className=\"chart-legend\">\n                    <span className=\"legend-item passing\">Passing</span>\n                    <span className=\"legend-item failing\">Failing</span>\n                  </div>\n                </div>\n                <div className=\"chart-content\">\n                  <div className=\"chart-area\">\n                    <div className=\"pie-chart\">\n                      <div className=\"pie-segment segment-1\"></div>\n                      <div className=\"pie-segment segment-2\"></div>\n                    </div>\n                    <div className=\"data-metrics\">\n                      <div className=\"metric\">\n                        <div className=\"metric-value\">87%</div>\n                        <div className=\"metric-label\">Compliance</div>\n                      </div>\n                      <div className=\"metric\">\n                        <div className=\"metric-value\">24</div>\n                        <div className=\"metric-label\">Issues</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"share-button\">\n                <span>Share</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"reports-text\">\n            <div className=\"reports-badge\">Reports</div>\n            <h2 className=\"reports-title\">Generate and share custom reports</h2>\n            <p className=\"reports-description\">\n              Instantly{\" \"}\n              <a href=\"#\" className=\"text-link\">\n                generate a report\n              </a>{\" \"}\n              after an inspection is complete that shows off your unique brand. Share it with your team, managers,\n              clients or customers with the tap of a finger.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"app-download-section\">\n        <div className=\"app-download-content\">\n          <div className=\"app-download-text\">\n            <h2 className=\"app-download-title\">Scan the QR code to download the app</h2>\n            <ul className=\"app-features-list\">\n              <li className=\"app-feature\">Conduct inspections and capture evidence even when offline.</li>\n              <li className=\"app-feature\">Personalize and share professional reports.</li>\n              <li className=\"app-feature\">Create and assign tasks to get the job done.</li>\n              <li className=\"app-feature\">Report issues and notify your team instantly.</li>\n              <li className=\"app-feature\">Manage your assets and operations, all in one place.</li>\n              <li className=\"app-feature\">Onboard, train and upskill on the job.</li>\n            </ul>\n            <div className=\"app-store-buttons\">\n              <a href=\"#\" className=\"app-store-button\">\n                <div className=\"store-badge\">\n                  <div className=\"apple-icon\"></div>\n                  <span className=\"store-icon\">\n                    <span className=\"store-prefix\">Download on the</span>\n                    <span className=\"store-name\">App Store</span>\n                  </span>\n                </div>\n              </a>\n              <a href=\"#\" className=\"google-play-button\">\n                <div className=\"store-badge\">\n                  <div className=\"play-icon\">\n                    <div className=\"play-triangle\"></div>\n                  </div>\n                  <span className=\"store-icon\">\n                    <span className=\"store-prefix\">GET IT ON</span>\n                    <span className=\"store-name\">Google Play</span>\n                  </span>\n                </div>\n              </a>\n            </div>\n          </div>\n          <div className=\"qr-code-container\">\n            <div className=\"company-logo-large\"></div>\n            <div className=\"qr-code\">\n              <img src={qr} alt=\"QR Code\" />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"cta-section\">\n        <h2 className=\"cta-title\">\n          Perform inspections identify problems\n          <br />\n          track tasks and communicate effectively.\n        </h2>\n        <button className=\"cta-button\">Get started for free</button>\n      </section>\n\n      <footer className=\"footer\">\n        <div className=\"footer-columns\">\n          <div className=\"footer-column\">\n            <h3 className=\"footer-heading\">Product</h3>\n            <ul className=\"footer-links\">\n              <li>\n                <a href=\"#\">Pricing</a>\n              </li>\n              <li>\n                <a href=\"#\">Book Demo</a>\n              </li>\n              <li>\n                <a href=\"#\">Product Updates</a>\n              </li>\n              <li>\n                <a href=\"#\">Safety/Culture (formerly Auditor)</a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"footer-column\">\n            <h3 className=\"footer-heading\">Support</h3>\n            <ul className=\"footer-links\">\n              <li>\n                <a href=\"#\">Help Center</a>\n              </li>\n              <li>\n                <a href=\"#\">Partner Support</a>\n              </li>\n              <li>\n                <a href=\"#\">API Developer Documentation</a>\n              </li>\n              <li>\n                <a href=\"#\">Digitize Your Checklist</a>\n              </li>\n              <li>\n                <a href=\"#\">Contact Us</a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"footer-column\">\n            <h3 className=\"footer-heading\">Resources</h3>\n            <ul className=\"footer-links\">\n              <li>\n                <a href=\"#\">Checklist Library</a>\n              </li>\n              <li>\n                <a href=\"#\">App & Software Guides</a>\n              </li>\n              <li>\n                <a href=\"#\">Checklist Guides</a>\n              </li>\n              <li>\n                <a href=\"#\">Topic Guides</a>\n              </li>\n              <li>\n                <a href=\"#\">eBooks</a>\n              </li>\n              <li>\n                <a href=\"#\">Blog</a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"footer-column\">\n            <h3 className=\"footer-heading\">Company</h3>\n            <ul className=\"footer-links\">\n              <li>\n                <a href=\"#\">About</a>\n              </li>\n              <li>\n                <a href=\"#\">Careers</a>\n              </li>\n              <li>\n                <a href=\"#\">News Room</a>\n              </li>\n              <li>\n                <a href=\"#\">Brand Partnerships</a>\n              </li>\n              <li>\n                <a href=\"#\">Meet the Leadership Team</a>\n              </li>\n              <li>\n                <a href=\"#\">Events</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"footer-bottom\">\n          <div className=\"footer-legal\">\n            <a href=\"#\">Status</a>\n            <span>•</span>\n            <a href=\"/legal\">Legal</a> {/* Replace with a valid route */}\n            <span>•</span>\n            <a href=\"/terms-and-conditions\">Terms and Conditions</a> {/* Replace with a valid route */}\n            <span>•</span>\n            <a href=\"/privacy-portal\">Privacy Portal</a> {/* Replace with a valid route */}\n            <span>•</span>\n            <a href=\"/security\">Security</a> {/* Replace with a valid route */}\n            <span>•</span>\n            <span>© 2025 Fashcognitive, Inc. All rights reserved.</span>\n          </div>\n          <div className=\"footer-social\">\n            <a href=\"#\" className=\"social-icon\" aria-label=\"Twitter\">\n              <img src=\"/placeholder.svg?height=20&width=20\" alt=\"Twitter\" />\n            </a>\n            <a href=\"#\" className=\"social-icon\" aria-label=\"LinkedIn\">\n              <img src=\"/placeholder.svg?height=20&width=20\" alt=\"LinkedIn\" />\n            </a>\n            <a href=\"#\" className=\"social-icon\" aria-label=\"Facebook\">\n              <img src=\"/placeholder.svg?height=20&width=20\" alt=\"Facebook\" />\n            </a>\n            <a href=\"#\" className=\"social-icon\" aria-label=\"Instagram\">\n              <img src=\"/placeholder.svg?height=20&width=20\" alt=\"Instagram\" />\n            </a>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Home2;","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/Create_template.tsx",["90","91","92","93"],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/TemplateView.tsx",[],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/Template.tsx",["94"],"\"use client\"\n\nimport type React from \"react\"\nimport { useState, useEffect } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport \"../assets/Template.css\"\nimport {\n  Plus,\n  Search,\n  FileText,\n  User,\n  X,\n  Home,\n  Bell,\n  ClipboardCheck,\n  Calendar,\n  Play,\n  BookOpen,\n  Package,\n  AlertCircle,\n  Settings,\n} from \"lucide-react\"\n\ninterface Template {\n  id: number\n  title: string\n  lastModified?: string\n  access?: string\n}\n\n// Define interface for endpoint result data\ninterface EndpointResult {\n  status?: number\n  ok?: boolean\n  parseError?: string\n  error?: string\n}\n\n// Define interface for debug info\ninterface DebugInfo {\n  endpoints: { [endpoint: string]: EndpointResult }\n  successEndpoint?: string\n  responseData?: any\n}\n\nconst TemplatePage: React.FC = () => {\n  const navigate = useNavigate()\n\n  const menuItems = [\n    { icon: Home, label: \"Home\", href: \"/dashboard\" },\n    { icon: Search, label: \"Search\", href: \"/search\" },\n    { icon: Bell, label: \"Notifications\", href: \"/notifications\" },\n    { icon: FileText, label: \"Templates\", href: \"/templates\", active: true },\n    { icon: ClipboardCheck, label: \"Inspections\", href: \"/inspections\" },\n    { icon: Calendar, label: \"Schedule\", href: \"/schedule\" },\n    { icon: Play, label: \"Actions\", href: \"/actions\" },\n    { icon: BookOpen, label: \"Training\", href: \"/training\" },\n    { icon: Package, label: \"Assets\", href: \"/assets\" },\n    { icon: AlertCircle, label: \"Issues\", href: \"/issues\" },\n  ]\n\n  const [templates, setTemplates] = useState<Template[]>([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(\"\")\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [debugInfo, setDebugInfo] = useState<DebugInfo | null>(null)\n\n  // List of potential endpoints to try\n  const endpointsToTry = [\n    \"/api/templates/\",\n    \"/templates_api/\",\n    \"/templates/\",\n    \"/api/v1/templates/\",\n    \"/api/user/templates/\",\n    \"/dashboard/templates/\",\n    \"/api/users/templates/\",\n  ]\n\n  const handleCreateTemplate = () => {\n    navigate(\"/create_templates\")\n  }\n\n  // Function to test all endpoints\n  useEffect(() => {\n    const testAllEndpoints = async () => {\n      setLoading(true)\n      setError(\"\")\n\n      const results: { [endpoint: string]: EndpointResult } = {}\n\n      for (const endpoint of endpointsToTry) {\n        try {\n          const fullUrl = `http://127.0.0.1:8000${endpoint}`\n          console.log(`Testing endpoint: ${fullUrl}`)\n\n          const response = await fetch(fullUrl)\n          results[endpoint] = {\n            status: response.status,\n            ok: response.ok,\n          }\n\n          if (response.ok) {\n            try {\n              const data = await response.json()\n              console.log(`Success with ${fullUrl}:`, data)\n              setTemplates(data)\n              setDebugInfo({\n                endpoints: results,\n                successEndpoint: fullUrl,\n                responseData: data,\n              })\n              setLoading(false)\n              return // Stop trying other endpoints\n            } catch (e) {\n              if (results[endpoint]) {\n                results[endpoint].parseError = \"Could not parse JSON\"\n              }\n            }\n          }\n        } catch (err) {\n          results[endpoint] = {\n            error: err instanceof Error ? err.message : String(err),\n          }\n        }\n      }\n\n      // If we get here, none of the endpoints worked\n      console.log(\"All endpoints failed:\", results)\n      setDebugInfo({ endpoints: results })\n      setError(\"Could not connect to any templates API endpoint\")\n\n      // Fall back to demo data\n      setTemplates([\n        { id: 1, title: \"Safety Inspection Form (Demo)\", lastModified: \"2 days ago\", access: \"All users\" },\n        { id: 2, title: \"Weekly Equipment Check (Demo)\", lastModified: \"5 days ago\", access: \"Team managers\" },\n        { id: 3, title: \"Monthly Fire Safety Audit (Demo)\", lastModified: \"2 weeks ago\", access: \"Safety officers\" },\n      ])\n\n      setLoading(false)\n    }\n\n    testAllEndpoints()\n  }, [])\n\n  // Filter templates based on search term\n  const filteredTemplates = templates.filter((template) =>\n    template.title.toLowerCase().includes(searchTerm.toLowerCase()),\n  )\n\n  return (\n    <div className=\"app-container\">\n      {/* Top Navigation */}\n      <nav className=\"navbar\">\n        <div className=\"navbar-brand\">FASHCOGNITIVE</div>\n        <div className=\"navbar-actions\">\n          <button className=\"nav-button\">\n            <User size={20} />\n          </button>\n          <button className=\"nav-button\">\n            <Settings size={20} />\n          </button>\n        </div>\n      </nav>\n\n      {/* Sidebar */}\n      <aside className=\"sidebar\">\n        <nav className=\"sidebar-nav\">\n          {menuItems.map((item, index) => (\n            <a key={index} href={item.href} className={`nav-link ${item.active ? \"active\" : \"\"}`}>\n              <item.icon size={20} />\n              <span>{item.label}</span>\n            </a>\n          ))}\n        </nav>\n      </aside>\n\n      <div className=\"template-container\">\n        <div className=\"template-header\">\n          <nav className=\"template-tabs\">\n            <button className=\"tab active\">Templates</button>\n            <button className=\"tab\">Responses</button>\n            <button className=\"tab\">Public Library</button>\n            <button className=\"tab\">Archive</button>\n          </nav>\n        </div>\n\n        <div className=\"template-content\">\n          <section className=\"creation-section\">\n            <div className=\"section-header\">\n              <h2>Create your template from one of the options below.</h2>\n              <button className=\"close-button\">\n                <X size={20} />\n              </button>\n            </div>\n\n            <div className=\"creation-options\">\n              <div className=\"option-card\">\n                <div className=\"option-icon\">\n                  <Plus size={24} />\n                </div>\n                <h3>Start from scratch</h3>\n                <p>Get started with a blank template.</p>\n              </div>\n              <div className=\"option-card\">\n                <div className=\"option-icon\">\n                  <FileText size={24} />\n                </div>\n                <h3>Describe topic</h3>\n                <p>Enter a text prompt about your template.</p>\n              </div>\n              <div className=\"option-card\">\n                <div className=\"option-icon\">\n                  <Search size={24} />\n                </div>\n                <h3>Find pre-made template</h3>\n                <p>Choose from over 100,000 editable templates.</p>\n              </div>\n            </div>\n          </section>\n\n          <section className=\"templates-section\">\n            <div className=\"templates-header\">\n              <h2>\n                Templates{\" \"}\n                <span className=\"count\">\n                  (1 - {filteredTemplates.length} of {templates.length})\n                </span>\n              </h2>\n              <button className=\"create-button\" onClick={handleCreateTemplate}>\n                <Plus size={16} />\n                Create\n              </button>\n            </div>\n\n            {/* Show loading indicator or error message */}\n            {loading && <div className=\"loading\">Loading templates...</div>}\n            {error && (\n              <div className=\"error-message\">\n                {error}\n                <p>Showing demo data for display purposes.</p>\n                <details>\n                  <summary>API Debug Info (Click to expand)</summary>\n                  <pre>{JSON.stringify(debugInfo, null, 2)}</pre>\n                </details>\n              </div>\n            )}\n\n            <div className=\"search-controls\">\n              <div className=\"search-field\">\n                <Search className=\"search-icon\" size={20} />\n                <input\n                  type=\"text\"\n                  placeholder=\"Search all templates\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                />\n              </div>\n              <button className=\"filter-button\">\n                <Plus size={16} />\n                Add filter\n              </button>\n            </div>\n\n            <div className=\"templates-table\">\n              <table>\n                <thead>\n                  <tr>\n                    <th className=\"checkbox-column\">\n                      <input type=\"checkbox\" />\n                    </th>\n                    <th>Template</th>\n                    <th>Last modified</th>\n                    <th>Access</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {filteredTemplates.map((template) => (\n                    <tr key={template.id}>\n                      <td className=\"checkbox-column\">\n                        <input type=\"checkbox\" />\n                      </td>\n                      <td>\n                        <div className=\"template-cell\">\n                          <div className=\"template-icon\">\n                            <FileText size={20} />\n                          </div>\n                          <span>{template.title}</span>\n                        </div>\n                      </td>\n                      <td>{template.lastModified || \"Not available\"}</td>\n                      <td>\n                        <div className=\"access-badge\">\n                          <User size={16} />\n                          <span>{template.access || \"No access specified\"}</span>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"action-buttons\">\n                          <button className=\"start-inspection\">Start inspection</button>\n                          <button className=\"view-button\" onClick={() => navigate(`/template/${template.id}`)}>\n                            View\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TemplatePage\n","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/register.tsx",[],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/utils/csrf.ts",[],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/components/ConnectionsPanel.tsx",[],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/components/AccessManager.tsx",["95","96","97","98","99"],"import React, { useState, useEffect } from 'react';\nimport {\n  User,\n  UserPlus,\n  Mail,\n  Shield,\n  Check,\n  X,\n  Edit2,\n  Trash2,\n  Search,\n  AlertCircle,\n  Info,\n  Copy,\n  ExternalLink,\n  Users\n} from 'lucide-react';\nimport './AccessManager.css';\n\n// Define permission types\nexport type PermissionLevel = 'owner' | 'admin' | 'editor' | 'viewer';\n\nexport interface UserPermission {\n  id: string;\n  name: string;\n  email: string;\n  avatar?: string;\n  permissionLevel: PermissionLevel;\n  status: 'active' | 'pending' | 'expired';\n  lastAccessed?: Date;\n}\n\nexport interface Connection {\n  id: string;\n  name: string;\n  email: string;\n  avatar?: string;\n  initials: string;\n  status: 'active' | 'pending' | 'declined';\n}\n\ninterface AccessManagerProps {\n  templateId: string;\n  templateTitle: string;\n  initialUsers?: UserPermission[];\n  onUpdatePermissions?: (users: UserPermission[]) => void;\n}\n\nconst generateId = () => Math.random().toString(36).substring(2, 9);\n\nconst getPermissionLabel = (level: PermissionLevel): string => {\n  switch (level) {\n    case 'owner':\n      return 'Owner';\n    case 'admin':\n      return 'Administrator';\n    case 'editor':\n      return 'Editor';\n    case 'viewer':\n      return 'Viewer';\n    default:\n      return 'Unknown';\n  }\n};\n\nconst getPermissionDescription = (level: PermissionLevel): string => {\n  switch (level) {\n    case 'owner':\n      return 'Full control including template deletion and ownership transfer';\n    case 'admin':\n      return 'Can edit template, manage users, and publish';\n    case 'editor':\n      return 'Can edit template content but cannot publish or manage users';\n    case 'viewer':\n      return 'Can only view and use the template';\n    default:\n      return '';\n  }\n};\n\nconst AccessManager: React.FC<AccessManagerProps> = ({\n  templateId,\n  templateTitle,\n  initialUsers = [],\n  onUpdatePermissions\n}) => {\n  // Default owner if no users provided\n  const defaultOwner: UserPermission = {\n    id: generateId(),\n    name: 'You',\n    email: 'current.user@example.com',\n    permissionLevel: 'owner',\n    status: 'active',\n    lastAccessed: new Date()\n  };\n\n  const [users, setUsers] = useState<UserPermission[]>(\n    initialUsers.length > 0 ? initialUsers : [defaultOwner]\n  );\n\n  const [showInviteForm, setShowInviteForm] = useState(false);\n  const [newUserEmail, setNewUserEmail] = useState('');\n  const [newUserPermission, setNewUserPermission] = useState<PermissionLevel>('viewer');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [editingUserId, setEditingUserId] = useState<string | null>(null);\n  const [showShareLink, setShowShareLink] = useState(false);\n  const [shareLink, setShareLink] = useState('');\n  const [linkCopied, setLinkCopied] = useState(false);\n  const [showPermissionDetails, setShowPermissionDetails] = useState(false);\n  const [showConnectionsModal, setShowConnectionsModal] = useState(false);\n  const [inviteTab, setInviteTab] = useState<'email' | 'connections'>('email');\n\n  // Sample connections data for demonstration\n  // Map to store individual permission levels for each connection\n  const [connectionPermissions, setConnectionPermissions] = useState<Record<string, PermissionLevel>>({});\n\n  const [connections, setConnections] = useState<Connection[]>([\n    {\n      id: '1',\n      name: 'Grace Miller',\n      email: 'grace.miller@example.com',\n      initials: 'GM',\n      status: 'active'\n    },\n    {\n      id: '2',\n      name: 'John Martinez',\n      email: 'john.martinez@example.com',\n      initials: 'JM',\n      status: 'active'\n    },\n    {\n      id: '3',\n      name: 'Sarah Johnson',\n      email: 'sarah.johnson@example.com',\n      initials: 'SJ',\n      status: 'active'\n    },\n    {\n      id: '4',\n      name: 'Michael Brown',\n      email: 'michael.brown@example.com',\n      initials: 'MB',\n      status: 'active'\n    },\n    {\n      id: '5',\n      name: 'Emily Davis',\n      email: 'emily.davis@example.com',\n      initials: 'ED',\n      status: 'active'\n    }\n  ]);\n\n  // Generate a share link\n  useEffect(() => {\n    setShareLink(`https://fashcognitive.com/templates/share/${templateId}?token=${generateId()}`);\n  }, [templateId]);\n\n  // Update parent component when users change\n  useEffect(() => {\n    if (onUpdatePermissions) {\n      onUpdatePermissions(users);\n    }\n  }, [users, onUpdatePermissions]);\n\n  const handleAddUser = () => {\n    if (!newUserEmail.trim()) return;\n\n    // Check if user already exists\n    if (users.some(user => user.email.toLowerCase() === newUserEmail.toLowerCase())) {\n      alert('This user has already been invited.');\n      return;\n    }\n\n    const newUser: UserPermission = {\n      id: generateId(),\n      name: newUserEmail.split('@')[0], // Extract name from email\n      email: newUserEmail,\n      permissionLevel: newUserPermission,\n      status: 'pending'\n    };\n\n    setUsers([...users, newUser]);\n    setNewUserEmail('');\n    setNewUserPermission('viewer');\n    setShowInviteForm(false);\n  };\n\n  const handleAddConnection = (connection: Connection, permissionLevel: PermissionLevel) => {\n    // Check if connection already exists as a user\n    if (users.some(user => user.email.toLowerCase() === connection.email.toLowerCase())) {\n      alert('This user has already been invited.');\n      return;\n    }\n\n    const newUser: UserPermission = {\n      id: generateId(),\n      name: connection.name,\n      email: connection.email,\n      avatar: connection.avatar,\n      permissionLevel: permissionLevel,\n      status: 'pending'\n    };\n\n    setUsers([...users, newUser]);\n    setShowInviteForm(false);\n  };\n\n  // Initialize connection permissions with default values\n  useEffect(() => {\n    const newPermissions: Record<string, PermissionLevel> = {};\n    connections.forEach(connection => {\n      if (!connectionPermissions[connection.id]) {\n        newPermissions[connection.id] = 'viewer';\n      }\n    });\n\n    if (Object.keys(newPermissions).length > 0) {\n      setConnectionPermissions(prev => ({ ...prev, ...newPermissions }));\n    }\n  }, [connections, connectionPermissions]);\n\n  const handleConnectionPermissionChange = (connectionId: string, permissionLevel: PermissionLevel) => {\n    setConnectionPermissions(prev => ({\n      ...prev,\n      [connectionId]: permissionLevel\n    }));\n  };\n\n  // Filter connections that are not already users\n  const availableConnections = connections.filter(\n    connection => !users.some(user => user.email.toLowerCase() === connection.email.toLowerCase())\n  );\n\n  const handleUpdatePermission = (userId: string, permissionLevel: PermissionLevel) => {\n    setUsers(users.map(user =>\n      user.id === userId ? { ...user, permissionLevel } : user\n    ));\n    setEditingUserId(null);\n  };\n\n  const handleRemoveUser = (userId: string) => {\n    // Don't allow removing the owner\n    if (users.find(user => user.id === userId)?.permissionLevel === 'owner') {\n      alert('You cannot remove the owner of the template.');\n      return;\n    }\n\n    setUsers(users.filter(user => user.id !== userId));\n  };\n\n  const handleTransferOwnership = (userId: string) => {\n    // Find current owner and new owner\n    const currentOwner = users.find(user => user.permissionLevel === 'owner');\n    const newOwner = users.find(user => user.id === userId);\n\n    if (!currentOwner || !newOwner) return;\n\n    // Swap permissions\n    setUsers(users.map(user => {\n      if (user.id === currentOwner.id) {\n        return { ...user, permissionLevel: 'admin' };\n      }\n      if (user.id === userId) {\n        return { ...user, permissionLevel: 'owner' };\n      }\n      return user;\n    }));\n\n    setEditingUserId(null);\n  };\n\n  const copyShareLink = () => {\n    navigator.clipboard.writeText(shareLink);\n    setLinkCopied(true);\n    setTimeout(() => setLinkCopied(false), 2000);\n  };\n\n  // Filter users based on search term\n  const filteredUsers = users.filter(user =>\n    user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    user.email.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div className=\"access-manager\">\n      <div style={{ width: '100%', maxWidth: '1000px' }}>\n      <div className=\"access-header\">\n        <h2>Manage Access</h2>\n        <p>Control who can view and edit \"{templateTitle}\"</p>\n      </div>\n\n      <div className=\"access-actions\">\n        <div className=\"search-container\">\n          <Search size={18} className=\"search-icon\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search users...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"search-input\"\n          />\n        </div>\n\n        <div className=\"action-buttons\">\n          <button\n            className=\"share-link-button\"\n            onClick={() => setShowShareLink(!showShareLink)}\n          >\n            <ExternalLink size={16} />\n            Share Link\n          </button>\n\n          <button\n            className=\"invite-button\"\n            onClick={() => setShowInviteForm(!showInviteForm)}\n          >\n            <UserPlus size={16} />\n            Invite User\n          </button>\n        </div>\n      </div>\n\n      {showShareLink && (\n        <div className=\"share-link-container\">\n          <div className=\"share-link-header\">\n            <h3>Share Template</h3>\n            <button className=\"close-button\" onClick={() => setShowShareLink(false)}>\n              <X size={16} />\n            </button>\n          </div>\n          <p>Anyone with this link can view this template:</p>\n          <div className=\"share-link-input\">\n            <input type=\"text\" value={shareLink} readOnly />\n            <button onClick={copyShareLink}>\n              <Copy size={16} />\n              {linkCopied ? 'Copied!' : 'Copy'}\n            </button>\n          </div>\n        </div>\n      )}\n\n      {showInviteForm && (\n        <div className=\"invite-form\">\n          <div className=\"invite-form-header\">\n            <h3>Invite User</h3>\n            <button className=\"close-button\" onClick={() => setShowInviteForm(false)}>\n              <X size={16} />\n            </button>\n          </div>\n\n          <div className=\"invite-tabs\">\n            <button\n              className={`invite-tab ${inviteTab === 'email' ? 'active' : ''}`}\n              onClick={() => setInviteTab('email')}\n            >\n              <Mail size={16} />\n              Email\n            </button>\n            <button\n              className={`invite-tab ${inviteTab === 'connections' ? 'active' : ''}`}\n              onClick={() => setInviteTab('connections')}\n            >\n              <Users size={16} />\n              My Connections\n            </button>\n          </div>\n\n          {inviteTab === 'email' ? (\n            <div className=\"tab-content\">\n              <div className=\"form-group\">\n                <label>Email Address</label>\n                <div className=\"email-input\">\n                  <Mail size={18} className=\"email-icon\" />\n                  <input\n                    type=\"email\"\n                    placeholder=\"Enter email address\"\n                    value={newUserEmail}\n                    onChange={(e) => setNewUserEmail(e.target.value)}\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <label>\n                  Permission Level\n                  <button\n                    className=\"info-button\"\n                    onClick={() => setShowPermissionDetails(!showPermissionDetails)}\n                  >\n                    <Info size={14} />\n                  </button>\n                </label>\n                <select\n                  value={newUserPermission}\n                  onChange={(e) => setNewUserPermission(e.target.value as PermissionLevel)}\n                >\n                  <option value=\"viewer\">Viewer</option>\n                  <option value=\"editor\">Editor</option>\n                  <option value=\"admin\">Administrator</option>\n                </select>\n              </div>\n\n              {showPermissionDetails && (\n                <div className=\"permission-details\">\n                  <div className=\"permission-item\">\n                    <h4>Viewer</h4>\n                    <p>Can view and use the template but cannot make changes</p>\n                  </div>\n                  <div className=\"permission-item\">\n                    <h4>Editor</h4>\n                    <p>Can edit template content but cannot publish or manage users</p>\n                  </div>\n                  <div className=\"permission-item\">\n                    <h4>Administrator</h4>\n                    <p>Can edit template, manage users, and publish</p>\n                  </div>\n                  <div className=\"permission-item\">\n                    <h4>Owner</h4>\n                    <p>Full control including template deletion and ownership transfer</p>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"invite-actions\">\n                <button className=\"cancel-button\" onClick={() => setShowInviteForm(false)}>Cancel</button>\n                <button\n                  className=\"send-invite-button\"\n                  onClick={handleAddUser}\n                  disabled={!newUserEmail.trim()}\n                >\n                  Send Invite\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div className=\"tab-content\">\n              <div className=\"form-group\">\n                <label>\n                  Permission Levels\n                  <button\n                    className=\"info-button\"\n                    onClick={() => setShowPermissionDetails(!showPermissionDetails)}\n                  >\n                    <Info size={14} />\n                  </button>\n                </label>\n                <p className=\"permission-hint\">Set permission level for each connection individually</p>\n              </div>\n\n              {showPermissionDetails && (\n                <div className=\"permission-details\">\n                  <div className=\"permission-item\">\n                    <h4>Viewer</h4>\n                    <p>Can view and use the template but cannot make changes</p>\n                  </div>\n                  <div className=\"permission-item\">\n                    <h4>Editor</h4>\n                    <p>Can edit template content but cannot publish or manage users</p>\n                  </div>\n                  <div className=\"permission-item\">\n                    <h4>Administrator</h4>\n                    <p>Can edit template, manage users, and publish</p>\n                  </div>\n                  <div className=\"permission-item\">\n                    <h4>Owner</h4>\n                    <p>Full control including template deletion and ownership transfer</p>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"connections-list-container\">\n                <h4 className=\"connections-list-title\">\n                  Select from your connections\n                  <span className=\"connections-count\">({availableConnections.length})</span>\n                </h4>\n\n                {availableConnections.length === 0 ? (\n                  <div className=\"no-connections-message\">\n                    <p>All your connections have already been invited to this template.</p>\n                  </div>\n                ) : (\n                  <div className=\"connections-select-list\">\n                    {availableConnections.map(connection => (\n                      <div key={connection.id} className=\"connection-select-item\">\n                        <div className=\"connection-info\">\n                          {connection.avatar ? (\n                            <img src={connection.avatar} alt={connection.name} className=\"connection-avatar\" />\n                          ) : (\n                            <div className=\"connection-initials\">{connection.initials}</div>\n                          )}\n                          <div className=\"connection-details\">\n                            <span className=\"connection-name\">{connection.name}</span>\n                            <span className=\"connection-email\">{connection.email}</span>\n                          </div>\n                        </div>\n                        <div className=\"connection-actions\">\n                          <select\n                            className=\"connection-permission-select\"\n                            value={connectionPermissions[connection.id] || 'viewer'}\n                            onChange={(e) => handleConnectionPermissionChange(connection.id, e.target.value as PermissionLevel)}\n                          >\n                            <option value=\"viewer\">Viewer</option>\n                            <option value=\"editor\">Editor</option>\n                            <option value=\"admin\">Admin</option>\n                          </select>\n                          <button\n                            className=\"add-connection-btn\"\n                            onClick={() => handleAddConnection(connection, connectionPermissions[connection.id] || 'viewer')}\n                          >\n                            Add\n                          </button>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n\n              <div className=\"invite-actions\">\n                <button className=\"cancel-button\" onClick={() => setShowInviteForm(false)}>Cancel</button>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      <div className=\"users-list-container\">\n        <div className=\"users-list-header\">\n          <div className=\"user-column\">User</div>\n          <div className=\"permission-column\">Permission</div>\n          <div className=\"status-column\">Status</div>\n          <div className=\"actions-column\">Actions</div>\n        </div>\n\n        <div className=\"users-list\">\n          {filteredUsers.length === 0 ? (\n            <div className=\"no-users\">\n              <AlertCircle size={24} />\n              <p>No users found matching \"{searchTerm}\"</p>\n            </div>\n          ) : (\n            filteredUsers.map(user => (\n              <div key={user.id} className=\"user-item\">\n                <div className=\"user-info\">\n                  <div className=\"user-avatar\">\n                    {user.avatar ? (\n                      <img src={user.avatar} alt={user.name} />\n                    ) : (\n                      <div className=\"avatar-placeholder\">\n                        {user.name.charAt(0).toUpperCase()}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"user-details\">\n                    <div className=\"user-name\">{user.name}</div>\n                    <div className=\"user-email\">{user.email}</div>\n                  </div>\n                </div>\n\n                <div className=\"user-permission\">\n                  {editingUserId === user.id ? (\n                    <select\n                      value={user.permissionLevel}\n                      onChange={(e) => handleUpdatePermission(user.id, e.target.value as PermissionLevel)}\n                      className=\"permission-select\"\n                    >\n                      <option value=\"viewer\">Viewer</option>\n                      <option value=\"editor\">Editor</option>\n                      <option value=\"admin\">Administrator</option>\n                      <option value=\"owner\">Owner (Transfer Ownership)</option>\n                    </select>\n                  ) : (\n                    <div className={`permission-badge ${user.permissionLevel}`}>\n                      <Shield size={14} />\n                      <span>{getPermissionLabel(user.permissionLevel)}</span>\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"user-status\">\n                  <div className={`status-badge ${user.status}`}>\n                    {user.status === 'active' && <Check size={14} />}\n                    {user.status === 'pending' && <Mail size={14} />}\n                    {user.status === 'expired' && <AlertCircle size={14} />}\n                    <span>{user.status.charAt(0).toUpperCase() + user.status.slice(1)}</span>\n                  </div>\n                </div>\n\n                <div className=\"user-actions\">\n                  {user.permissionLevel !== 'owner' && (\n                    <>\n                      {editingUserId === user.id ? (\n                        <button\n                          className=\"save-button\"\n                          onClick={() => setEditingUserId(null)}\n                        >\n                          <Check size={16} />\n                        </button>\n                      ) : (\n                        <button\n                          className=\"edit-button\"\n                          onClick={() => setEditingUserId(user.id)}\n                        >\n                          <Edit2 size={16} />\n                        </button>\n                      )}\n                      <button\n                        className=\"delete-button\"\n                        onClick={() => handleRemoveUser(user.id)}\n                      >\n                        <Trash2 size={16} />\n                      </button>\n                    </>\n                  )}\n                  {user.permissionLevel === 'owner' && (\n                    <div className=\"owner-badge\">\n                      <User size={14} />\n                      <span>Owner</span>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AccessManager;\n",{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":4,"column":10,"nodeType":"106","messageId":"107","endLine":4,"endColumn":19},{"ruleId":"108","severity":1,"message":"109","line":137,"column":15,"nodeType":"110","endLine":137,"endColumn":49},{"ruleId":"108","severity":1,"message":"109","line":160,"column":15,"nodeType":"110","endLine":160,"endColumn":56},{"ruleId":"108","severity":1,"message":"109","line":169,"column":15,"nodeType":"110","endLine":169,"endColumn":58},{"ruleId":"108","severity":1,"message":"109","line":206,"column":17,"nodeType":"110","endLine":206,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":209,"column":17,"nodeType":"110","endLine":209,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":212,"column":17,"nodeType":"110","endLine":212,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":215,"column":17,"nodeType":"110","endLine":215,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":223,"column":17,"nodeType":"110","endLine":223,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":226,"column":17,"nodeType":"110","endLine":226,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":229,"column":17,"nodeType":"110","endLine":229,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":232,"column":17,"nodeType":"110","endLine":232,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":235,"column":17,"nodeType":"110","endLine":235,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":243,"column":17,"nodeType":"110","endLine":243,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":246,"column":17,"nodeType":"110","endLine":246,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":249,"column":17,"nodeType":"110","endLine":249,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":252,"column":17,"nodeType":"110","endLine":252,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":255,"column":17,"nodeType":"110","endLine":255,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":258,"column":17,"nodeType":"110","endLine":258,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":266,"column":17,"nodeType":"110","endLine":266,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":269,"column":17,"nodeType":"110","endLine":269,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":272,"column":17,"nodeType":"110","endLine":272,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":275,"column":17,"nodeType":"110","endLine":275,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":278,"column":17,"nodeType":"110","endLine":278,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":281,"column":17,"nodeType":"110","endLine":281,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":288,"column":13,"nodeType":"110","endLine":288,"endColumn":25},{"ruleId":"108","severity":1,"message":"109","line":301,"column":13,"nodeType":"110","endLine":301,"endColumn":70},{"ruleId":"108","severity":1,"message":"109","line":304,"column":13,"nodeType":"110","endLine":304,"endColumn":71},{"ruleId":"108","severity":1,"message":"109","line":307,"column":13,"nodeType":"110","endLine":307,"endColumn":71},{"ruleId":"108","severity":1,"message":"109","line":310,"column":13,"nodeType":"110","endLine":310,"endColumn":72},{"ruleId":"104","severity":1,"message":"111","line":51,"column":10,"nodeType":"106","messageId":"107","endLine":51,"endColumn":19},{"ruleId":"104","severity":1,"message":"112","line":1618,"column":10,"nodeType":"106","messageId":"107","endLine":1618,"endColumn":22},{"ruleId":"113","severity":1,"message":"114","line":1780,"column":6,"nodeType":"115","endLine":1780,"endColumn":8,"suggestions":"116"},{"ruleId":"104","severity":1,"message":"117","line":2195,"column":15,"nodeType":"106","messageId":"107","endLine":2195,"endColumn":38},{"ruleId":"113","severity":1,"message":"118","line":143,"column":6,"nodeType":"115","endLine":143,"endColumn":8,"suggestions":"119"},{"ruleId":"104","severity":1,"message":"120","line":66,"column":7,"nodeType":"106","messageId":"107","endLine":66,"endColumn":31},{"ruleId":"104","severity":1,"message":"121","line":110,"column":10,"nodeType":"106","messageId":"107","endLine":110,"endColumn":30},{"ruleId":"104","severity":1,"message":"122","line":110,"column":32,"nodeType":"106","messageId":"107","endLine":110,"endColumn":55},{"ruleId":"104","severity":1,"message":"123","line":117,"column":23,"nodeType":"106","messageId":"107","endLine":117,"endColumn":37},{"ruleId":"104","severity":1,"message":"124","line":253,"column":9,"nodeType":"106","messageId":"107","endLine":253,"endColumn":32},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"@typescript-eslint/no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'getCookie' is defined but never used.","'templateData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getInitialTemplate'. Either include it or remove the dependency array.","ArrayExpression",["127"],"'_exhaustiveCheck' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'endpointsToTry'. Either include it or remove the dependency array.",["128"],"'getPermissionDescription' is assigned a value but never used.","'showConnectionsModal' is assigned a value but never used.","'setShowConnectionsModal' is assigned a value but never used.","'setConnections' is assigned a value but never used.","'handleTransferOwnership' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [getInitialTemplate]",{"range":"133","text":"134"},"Update the dependencies array to be: [endpointsToTry]",{"range":"135","text":"136"},[62473,62475],"[getInitialTemplate]",[4062,4064],"[endpointsToTry]"]