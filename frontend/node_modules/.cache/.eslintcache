[{"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/index.tsx":"1","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/App.tsx":"2","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/routes.tsx":"3","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/Template.tsx":"4","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/register.tsx":"5","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/login.tsx":"6","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/TemplateView.tsx":"7","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/Dashboard.tsx":"8","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/home.tsx":"9","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/Inspection.tsx":"10","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/Create_template.tsx":"11","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/garment-template.tsx":"12","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/utils/api.ts":"13","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/utils/csrf.ts":"14","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/utils/aqlHelpers.ts":"15","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/components/ConnectionsPanel.tsx":"16","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/components/TemplateAssignmentManager.tsx":"17","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/components/AccessManager.tsx":"18","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/utils/aqlTables.ts":"19","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/Schedule.tsx":"20","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/components/ScheduleInspectionModal.tsx":"21"},{"size":319,"mtime":1745062432486,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1748666045564,"results":"24","hashOfConfig":"23"},{"size":1475,"mtime":1748666045570,"results":"25","hashOfConfig":"23"},{"size":23225,"mtime":1748666045567,"results":"26","hashOfConfig":"23"},{"size":10943,"mtime":1747625064015,"results":"27","hashOfConfig":"23"},{"size":5413,"mtime":1748360740519,"results":"28","hashOfConfig":"23"},{"size":11775,"mtime":1748666045568,"results":"29","hashOfConfig":"23"},{"size":19275,"mtime":1748666045566,"results":"30","hashOfConfig":"23"},{"size":46846,"mtime":1747236110995,"results":"31","hashOfConfig":"23"},{"size":131345,"mtime":1748666045567,"results":"32","hashOfConfig":"23"},{"size":159510,"mtime":1748666045566,"results":"33","hashOfConfig":"23"},{"size":194169,"mtime":1748666045570,"results":"34","hashOfConfig":"23"},{"size":3173,"mtime":1748360740519,"results":"35","hashOfConfig":"23"},{"size":1054,"mtime":1748360740520,"results":"36","hashOfConfig":"23"},{"size":455,"mtime":1746971474719,"results":"37","hashOfConfig":"23"},{"size":10716,"mtime":1745214534000,"results":"38","hashOfConfig":"23"},{"size":18973,"mtime":1748666045569,"results":"39","hashOfConfig":"23"},{"size":23220,"mtime":1748145110150,"results":"40","hashOfConfig":"23"},{"size":4800,"mtime":1747120548070,"results":"41","hashOfConfig":"23"},{"size":39115,"mtime":1748666045567,"results":"42","hashOfConfig":"23"},{"size":16067,"mtime":1748666045568,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"143jhuv",{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/index.tsx",[],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/App.tsx",[],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/routes.tsx",[],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/Template.tsx",["88","89","90"],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/register.tsx",[],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/login.tsx",[],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/TemplateView.tsx",[],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/Dashboard.tsx",["91"],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/home.tsx",["92","93","94","95"],"\"use client\"\n\nimport type React from \"react\"\nimport { useState, useEffect, useRef } from \"react\"\nimport {\n  ChevronDown,\n  Menu,\n  X,\n  ArrowRight,\n  Check,\n  Zap,\n  Shield,\n  BarChart3,\n  Clock,\n  FileCheck,\n  Smartphone,\n  PenTool,\n  Users,\n  Building,\n  Car,\n  Clipboard,\n  CheckCircle2,\n  AlertTriangle,\n  Wrench,\n  ArrowUpRight,\n  MousePointer,\n  ChevronRight,\n  Star,\n  Award,\n  Sparkles,\n} from \"lucide-react\"\nimport \"../pages/Home2.css\"\n\n// Import Streamlineer QC images\nimport Streamlineer_QC_1 from \"../assets/img/Streamlineer_QC_1.png\"\nimport Streamlineer_QC_2 from \"../assets/img/Streamlineer_QC_2.png\"\nimport Streamlineer_QC_3 from \"../assets/img/Streamlineer_QC_3.png\"\nimport Streamlineer_QC_4 from \"../assets/img/Streamlineer_QC_4.png\"\nimport Streamlineer_QC_5 from \"../assets/img/Streamlineer_QC_5.png\"\nimport DG from \"../assets/img/DG.png\"\nimport TM from \"../assets/img/TM.png\"\nimport RP from \"../assets/img/RP.png\"\nimport NX from \"../assets/img/NX.png\"\nimport HX from \"../assets/img/HX.png\"\nimport AZ from \"../assets/img/AZ.png\"\n\n// Custom Image component to replace Next.js Image\nconst Image = ({\n  src,\n  alt,\n  width,\n  height,\n  className,\n}: {\n  src: string\n  alt: string\n  width: number\n  height: number\n  className?: string\n}) => {\n  return (\n    <img\n      src={src || \"/placeholder.svg\"}\n      alt={alt}\n      width={width}\n      height={height}\n      className={className}\n      style={{ maxWidth: \"100%\", height: \"auto\" }}\n    />\n  )\n}\n\nconst Home2: React.FC = () => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\n  const [activeTab, setActiveTab] = useState(0)\n  const [activeFaq, setActiveFaq] = useState<number | null>(null)\n  const [currentBg, setCurrentBg] = useState(0)\n  const [isScrolled, setIsScrolled] = useState(false)\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 })\n  const cursorRef = useRef<HTMLDivElement>(null)\n\n  // Background images for header\n  const bgImages = [\n    Streamlineer_QC_1,\n    Streamlineer_QC_2,\n    Streamlineer_QC_3,\n    Streamlineer_QC_4,\n    Streamlineer_QC_5,\n  ]\n\n  // Tabs for features section\n  const tabs = [\n    {\n      title: \"Template Builder\",\n      icon: <PenTool size={20} />,\n      contentTitle: \"Intuitive Drag-and-Drop Template Builder\",\n      description:\n        \"Create any checklist or form you need. Utilize diverse question types (text, number, multiple-choice, signature, photo, GPS), add conditional logic, scoring, mandatory fields, and instructional media.\",\n      image: DG,\n    },\n    {\n      title: \"Mobile Inspections\",\n      icon: <Smartphone size={20} />,\n      contentTitle: \"Powerful Mobile Inspection App\",\n      description:\n        \"The easy-to-use app for iOS & Android ensures seamless inspections. Works flawlessly offline, allows rich data capture (annotated photos, notes), and provides access to relevant templates anytime.\",\n      image: TM,\n    },\n    {\n      title: \"Instant Reporting\",\n      icon: <FileCheck size={20} />,\n      contentTitle: \"Automated Inspection Reporting\",\n      description:\n        \"Forget manual report writing. Generate customizable PDF or web reports instantly after each inspection. Visualize data, track completion rates, and identify trends on dashboards.\",\n      image: RP,\n    },\n    {\n      title: \"Findings & Actions\",\n      icon: <AlertTriangle size={20} />,\n      contentTitle: \"Integrated Findings & Action Tracking\",\n      description:\n        \"Flag issues or non-conformances directly within an inspection. Assign corrective actions with deadlines and track their status to ensure prompt resolution, all linked back to the original inspection.\",\n      image: NX,\n    },\n  ]\n\n  // Stats for metrics section\n  const stats = [\n    { value: \"90%\", label: \"Faster Template Creation & Updates\" },\n    { value: \"50%\", label: \"Reduction in Inspection Time\" },\n    { value: \"100%\", label: \"Data Consistency Across Inspections\" },\n    { value: \"Instant\", label: \"Access to Completed Reports\" },\n  ]\n\n  // Industries for use cases section\n  const industries = [\n    { icon: <Shield size={24} />, title: \"Safety Walkthroughs & Audits\" },\n    { icon: <CheckCircle2 size={24} />, title: \"Quality Assurance Checklists\" },\n    { icon: <Wrench size={24} />, title: \"Preventative Maintenance Forms\" },\n    { icon: <Car size={24} />, title: \"Vehicle & Equipment Inspections\" },\n    { icon: <Building size={24} />, title: \"Facility & Site Inspections\" },\n    { icon: <Clipboard size={24} />, title: \"Regulatory Compliance Audits\" },\n    { icon: <Users size={24} />, title: \"Training Assessments & Sign-offs\" },\n    { icon: <BarChart3 size={24} />, title: \"Inventory & Stock Checks\" },\n  ]\n\n\n\n  // FAQs\n  const faqs = [\n    {\n      question: \"What types of questions/fields can I add to templates?\",\n      answer:\n        \"StreamLineer supports a wide range of field types including text, number, multiple choice, checkboxes, dropdown menus, date/time pickers, photo capture with annotation, signature fields, GPS location, barcode/QR scanning, and scoring fields. You can also add instructional text, images, or videos to guide inspectors.\",\n    },\n    {\n      question: \"How are templates shared and updated for field users?\",\n      answer:\n        \"Templates are centrally managed in the cloud. When you publish a new template or update an existing one, it's automatically synced to all users' mobile devices the next time they connect to the internet. Version control ensures everyone is always using the latest template version.\",\n    },\n    {\n      question: \"Does the mobile app work without an internet connection?\",\n      answer:\n        \"Yes, the StreamLineer mobile app is designed to work completely offline. Users can download templates when connected, conduct inspections without internet access, and all data is securely stored on the device until they reconnect, at which point it automatically syncs to the cloud.\",\n    },\n    {\n      question: \"Can I generate different report formats from inspections?\",\n      answer:\n        \"Absolutely. Fashcognitive offers customizable PDF reports with your branding, web-based interactive reports, and raw data exports in CSV or Excel format. You can create multiple report templates for different audiences or purposes from the same inspection data.\",\n    },\n    {\n      question: \"How are findings or failed items handled during an inspection?\",\n      answer:\n        \"When an inspector identifies an issue during an inspection, they can flag it as a finding, add photos and notes, assign a severity level, and create an action item directly from that finding. These actions can be assigned to team members with due dates and tracked to completion.\",\n    },\n    {\n      question: \"Is there a limit to the number of templates or inspections?\",\n      answer:\n        \"Our Professional and Enterprise plans include unlimited templates and inspections. The Starter plan includes up to 10 templates and 100 inspections per month. All plans can be upgraded as your needs grow.\",\n    },\n  ]\n\n  // Workflow steps with enhanced content\n  const workflowSteps = [\n    {\n      number: 1,\n      icon: <PenTool size={32} />,\n      title: \"Build\",\n      description:\n        \"Craft intelligent inspection templates effortlessly using our powerful, user-friendly builder. Add various field types and logic.\",\n      color: \"#4895ef\",\n      highlights: [\"Drag-and-drop interface\", \"Conditional logic\", \"Multiple question types\", \"Template versioning\"],\n    },\n    {\n      number: 2,\n      icon: <Smartphone size={32} />,\n      title: \"Inspect\",\n      description:\n        \"Conduct thorough inspections anywhere using the intuitive mobile app – even offline. Capture rich data quickly and easily.\",\n      color: \"#3a7bc8\",\n      highlights: [\"Works offline\", \"Photo annotations\", \"GPS location tracking\", \"Digital signatures\"],\n    },\n    {\n      number: 3,\n      icon: <FileCheck size={32} />,\n      title: \"Report\",\n      description:\n        \"Access detailed inspection reports instantly upon completion. Analyze performance with real-time dashboards.\",\n      color: \"#4cc9f0\",\n      highlights: [\"Instant PDF generation\", \"Custom report templates\", \"Data visualization\", \"Export options\"],\n    },\n    {\n      number: 4,\n      icon: <Zap size={32} />,\n      title: \"Act\",\n      description:\n        \"Identify findings during inspections and assign corrective actions directly within the app for seamless follow-up.\",\n      color: \"#3f37c9\",\n      highlights: [\"Action assignment\", \"Due date tracking\", \"Notification system\", \"Completion verification\"],\n    },\n  ]\n\n  // Background image rotation effect\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentBg((prev) => (prev + 1) % bgImages.length)\n    }, 3000)\n\n    return () => clearInterval(interval)\n  }, [bgImages.length])\n\n  // Scroll effect for header\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.scrollY > 50) {\n        setIsScrolled(true)\n      } else {\n        setIsScrolled(false)\n      }\n    }\n\n    window.addEventListener(\"scroll\", handleScroll)\n    return () => window.removeEventListener(\"scroll\", handleScroll)\n  }, [])\n\n  // Mouse move effect\n  useEffect(() => {\n    const handleMouseMove = (e: MouseEvent) => {\n      const { clientX, clientY } = e\n      setMousePosition({ x: clientX, y: clientY })\n\n      // Update custom cursor position\n      if (cursorRef.current) {\n        cursorRef.current.style.left = `${clientX}px`\n        cursorRef.current.style.top = `${clientY}px`\n      }\n    }\n\n    window.addEventListener(\"mousemove\", handleMouseMove)\n    return () => window.removeEventListener(\"mousemove\", handleMouseMove)\n  }, [])\n\n  // Intersection Observer for animations\n  const useOnScreen = (options = {}) => {\n    const ref = useRef<HTMLDivElement>(null)\n    const [isVisible, setIsVisible] = useState(false)\n\n    useEffect(() => {\n      const observer = new IntersectionObserver(([entry]) => {\n        setIsVisible(entry.isIntersecting)\n      }, options)\n\n      if (ref.current) {\n        observer.observe(ref.current)\n      }\n\n      return () => {\n        if (ref.current) {\n          observer.unobserve(ref.current)\n        }\n      }\n    }, [ref, options])\n\n    return [ref, isVisible] as const\n  }\n\n  // Refs for scroll animations\n  const [heroRef, heroVisible] = useOnScreen({ threshold: 0.1 })\n  const [workflowRef, workflowVisible] = useOnScreen({ threshold: 0.1 })\n  const [featuresRef, featuresVisible] = useOnScreen({ threshold: 0.1 })\n  const [statsRef, statsVisible] = useOnScreen({ threshold: 0.1 })\n  const [templateRef, templateVisible] = useOnScreen({ threshold: 0.1 })\n  const [mobileRef, mobileVisible] = useOnScreen({ threshold: 0.1 })\n  const [industriesRef, industriesVisible] = useOnScreen({ threshold: 0.1 })\n  const [ctaRef, ctaVisible] = useOnScreen({ threshold: 0.1 })\n\n  // Custom cursor state management\n  const [cursorVariant, setCursorVariant] = useState(\"default\")\n\n  // Function to enter button cursor state\n  const enterButton = () => setCursorVariant(\"button\")\n  // Function to enter link cursor state\n  const enterLink = () => setCursorVariant(\"link\")\n  // Function to reset cursor state\n  const leaveHover = () => setCursorVariant(\"default\")\n\n  // Apply 3D tilt effect to an element\n  const applyTiltEffect = (element: HTMLElement, mouseX: number, mouseY: number) => {\n    if (!element) return\n\n    const rect = element.getBoundingClientRect()\n    const centerX = rect.left + rect.width / 2\n    const centerY = rect.top + rect.height / 2\n\n    const rotateY = ((mouseX - centerX) / (window.innerWidth / 2)) * 5\n    const rotateX = ((centerY - mouseY) / (window.innerHeight / 2)) * 5\n\n    element.style.transform = `perspective(1000px) rotateY(${rotateY}deg) rotateX(${rotateX}deg)`\n  }\n\n  // Apply tilt effect to hero image\n  useEffect(() => {\n    const heroImage = document.querySelector(\".Home2-hero-image-container\") as HTMLElement\n    const templateImage = document.querySelector(\".Home2-template-img-container\") as HTMLElement\n    const mobileImage = document.querySelector(\".Home2-mobile-img-container\") as HTMLElement\n\n    if (heroImage && heroVisible) {\n      applyTiltEffect(heroImage, mousePosition.x, mousePosition.y)\n    }\n\n    if (templateImage && templateVisible) {\n      applyTiltEffect(templateImage, mousePosition.x, mousePosition.y)\n    }\n\n    if (mobileImage && mobileVisible) {\n      applyTiltEffect(mobileImage, mousePosition.x, mousePosition.y)\n    }\n  }, [mousePosition, heroVisible, templateVisible, mobileVisible])\n\n  // Initialize floating elements animation\n  useEffect(() => {\n    const floatingElements = document.querySelectorAll(\".Home2-floating-element\")\n\n    floatingElements.forEach((element, index) => {\n      const el = element as HTMLElement\n      const duration = 6 + index * 2\n      const delay = index * 0.5\n\n      // Set initial animation properties\n      el.style.animation = `float ${duration}s ease-in-out ${delay}s infinite alternate`\n    })\n  }, [])\n\n  // Initialize scroll animations\n  useEffect(() => {\n    const animateOnScroll = () => {\n      const elements = document.querySelectorAll(\".Home2-animate-on-scroll\")\n\n      elements.forEach((element) => {\n        const el = element as HTMLElement\n        const rect = el.getBoundingClientRect()\n\n        if (rect.top < window.innerHeight * 0.8) {\n          el.classList.add(\"Home2-animate-in\")\n        }\n      })\n    }\n\n    window.addEventListener(\"scroll\", animateOnScroll)\n    animateOnScroll() // Run once on mount\n\n    return () => window.removeEventListener(\"scroll\", animateOnScroll)\n  }, [])\n\n  // Initialize progress indicators for workflow steps\n  useEffect(() => {\n    if (workflowVisible) {\n      const progressIndicators = document.querySelectorAll(\".Home2-step-progress-indicator\")\n\n      progressIndicators.forEach((indicator, index) => {\n        const el = indicator as HTMLElement\n        setTimeout(\n          () => {\n            el.style.width = \"100%\"\n          },\n          300 + index * 200,\n        )\n      })\n    }\n  }, [workflowVisible])\n\n  // FAQ animation\n  const toggleFaq = (index: number) => {\n    // Toggle the active FAQ without hiding any questions\n    if (activeFaq === index) {\n      setActiveFaq(null)\n    } else {\n      setActiveFaq(index)\n    }\n\n    // Ensure all FAQ items remain visible after a short delay\n    setTimeout(() => {\n      const faqItems = document.querySelectorAll('.Home2-faq-item')\n      faqItems.forEach(item => {\n        const element = item as HTMLElement\n        element.style.opacity = '1'\n        element.style.visibility = 'visible'\n        element.style.display = 'block'\n      })\n\n      const faqQuestions = document.querySelectorAll('.Home2-faq-question')\n      faqQuestions.forEach(question => {\n        const element = question as HTMLElement\n        element.style.opacity = '1'\n        element.style.visibility = 'visible'\n      })\n    }, 50)\n  }\n\n  return (\n    <div className=\"Home2-streamlineer-container\">\n      {/* Custom cursor */}\n      <div ref={cursorRef} className={`Home2-custom-cursor ${cursorVariant === \"button\" ? \"Home2-button\" : cursorVariant === \"link\" ? \"Home2-link\" : \"\"}`}>\n        <MousePointer size={12} />\n      </div>\n\n      {/* Header with animated background */}\n      <header className={`Home2-header ${isScrolled ? \"Home2-scrolled\" : \"\"}`}>\n        <div className=\"Home2-header-content\">\n          <div className=\"Home2-logo\">\n            <span className=\"Home2-logo-text\">STREAMLINEER</span>\n          </div>\n\n          <button\n            className=\"Home2-menu-toggle\"\n            onClick={() => setIsMenuOpen(!isMenuOpen)}\n            aria-label={isMenuOpen ? \"Close menu\" : \"Open menu\"}\n            onMouseEnter={enterButton}\n            onMouseLeave={leaveHover}\n          >\n            {isMenuOpen ? <X size={24} /> : <Menu size={24} />}\n          </button>\n\n          <nav className={`Home2-main-nav ${isMenuOpen ? \"Home2-open\" : \"\"}`}>\n            <ul className=\"Home2-nav-list\">\n              <li className=\"Home2-nav-item\">\n                <a href=\"#features\" className=\"Home2-nav-link\" onMouseEnter={enterLink} onMouseLeave={leaveHover}>\n                  Features <ChevronDown size={16} />\n                </a>\n                <div className=\"Home2-dropdown-menu\">\n                  <a href=\"#template-builder\" className=\"Home2-dropdown-item\">\n                    Template Builder\n                  </a>\n                  <a href=\"#mobile-app\" className=\"Home2-dropdown-item\">\n                    Mobile App\n                  </a>\n                  <a href=\"#reporting\" className=\"Home2-dropdown-item\">\n                    Reporting\n                  </a>\n                  <a href=\"#actions\" className=\"Home2-dropdown-item\">\n                    Action Tracking\n                  </a>\n                </div>\n              </li>\n              <li className=\"Home2-nav-item\">\n                <a href=\"#templates\" className=\"Home2-nav-link\" onMouseEnter={enterLink} onMouseLeave={leaveHover}>\n                  Templates\n                </a>\n              </li>\n              <li className=\"Home2-nav-item\">\n                <a href=\"#pricing\" className=\"Home2-nav-link\" onMouseEnter={enterLink} onMouseLeave={leaveHover}>\n                  Pricing\n                </a>\n              </li>\n              <li className=\"Home2-nav-item\">\n                <a href=\"#resources\" className=\"Home2-nav-link\" onMouseEnter={enterLink} onMouseLeave={leaveHover}>\n                  Resources <ChevronDown size={16} />\n                </a>\n                <div className=\"Home2-dropdown-menu\">\n                  <a href=\"#blog\" className=\"Home2-dropdown-item\">\n                    Blog\n                  </a>\n                  <a href=\"#guides\" className=\"Home2-dropdown-item\">\n                    Guides\n                  </a>\n                  <a href=\"#support\" className=\"Home2-dropdown-item\">\n                    Support\n                  </a>\n                </div>\n              </li>\n              <li className=\"Home2-nav-item\">\n                <a href=\"#contact\" className=\"Home2-nav-link\" onMouseEnter={enterLink} onMouseLeave={leaveHover}>\n                  Contact Us\n                </a>\n              </li>\n            </ul>\n\n            <div className=\"Home2-nav-buttons\">\n              <a href=\"login\" className=\"Home2-btn Home2-btn-outline\" onMouseEnter={enterButton} onMouseLeave={leaveHover}>\n                Log In\n              </a>\n              <a href=\"register\" className=\"Home2-btn Home2-btn-primary\" onMouseEnter={enterButton} onMouseLeave={leaveHover}>\n                Start Free\n              </a>\n            </div>\n          </nav>\n        </div>\n      </header>\n\n      {/* Hero Section */}\n      <section className=\"Home2-hero-section\" ref={heroRef}>\n        <div className=\"Home2-container\">\n          <div className=\"Home2-hero-flex\">\n            <div className={`Home2-hero-content ${heroVisible ? \"Home2-animate-in\" : \"\"}`}>\n              <h1 className=\"Home2-hero-title\">\n                Build Smarter\n                <br />\n                Checklists<span className=\"Home2-accent-dot\">.</span>\n                <br />\n                Conduct Flawless\n                <br />\n                Inspections<span className=\"Home2-accent-dot\">.</span>\n              </h1>\n              <p className=\"Home2-hero-subtitle\">\n                The intuitive platform for rapidly creating powerful, dynamic inspection templates and empowering your\n                teams to execute thorough checks anywhere, capture critical data accurately, and generate instant\n                reports.\n              </p>\n              <div className=\"Home2-hero-buttons\">\n                <a\n                  href=\"register\"\n                  className=\"Home2-btn Home2-btn-primary Home2-btn-lg Home2-btn-hover-effect\"\n                  onMouseEnter={enterButton}\n                  onMouseLeave={leaveHover}\n                >\n                  Start Building Templates Free\n                </a>\n                <a\n                  href=\"#demo\"\n                  className=\"Home2-btn Home2-btn-outline Home2-btn-lg Home2-btn-hover-effect\"\n                  onMouseEnter={enterButton}\n                  onMouseLeave={leaveHover}\n                >\n                  See Inspection Features\n                </a>\n              </div>\n            </div>\n\n            <div className={`Home2-hero-image-container ${heroVisible ? \"Home2-animate-in\" : \"\"}`}>\n              <div className=\"Home2-hero-image-slider\">\n                {bgImages.map((img, index) => (\n                  <div key={index} className={`Home2-hero-slide ${currentBg === index ? \"Home2-active\" : \"\"}`}>\n                    <Image\n                      src={img || \"/placeholder.svg\"}\n                      alt={`StreamLineer platform ${index + 1}`}\n                      width={600}\n                      height={600}\n                      className=\"Home2-hero-img\"\n                    />\n                  </div>\n                ))}\n              </div>\n\n              {/* Image navigation dots */}\n              <div className=\"Home2-image-nav-dots\">\n                {bgImages.map((_, index) => (\n                  <button\n                    key={index}\n                    className={`Home2-nav-dot ${currentBg === index ? \"Home2-active\" : \"\"}`}\n                    onClick={() => setCurrentBg(index)}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Fixed wave position to not hide buttons */}\n        <div className=\"Home2-hero-wave-container\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\" className=\"Home2-hero-wave\">\n            <path\n              fill=\"#ffffff\"\n              fillOpacity=\"1\"\n              d=\"M0,96L48,112C96,128,192,160,288,160C384,160,480,128,576,122.7C672,117,768,139,864,149.3C960,160,1056,160,1152,138.7C1248,117,1344,75,1392,53.3L1440,32L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"\n            ></path>\n          </svg>\n        </div>\n      </section>\n\n      {/* Enhanced Workflow section */}\n      <section className=\"Home2-workflow-section\" ref={workflowRef}>\n        <div className=\"Home2-container\">\n          <div className={`Home2-workflow-header Home2-animate-on-scroll ${workflowVisible ? \"Home2-animate-in\" : \"\"}`}>\n            <h2 className=\"Home2-section-title\">Your Inspection Workflow, Simplified</h2>\n            <p className=\"Home2-section-subtitle\">\n              Our streamlined process makes inspections efficient from creation to action\n            </p>\n          </div>\n\n          <div className=\"Home2-workflow-steps-container\">\n            {workflowSteps.map((step, index) => (\n              <div\n                key={index}\n                className={`Home2-workflow-step-card Home2-animate-on-scroll`}\n                style={{\n                  borderTop: `4px solid ${step.color}`,\n                  animationDelay: `${index * 0.15}s`,\n                }}\n              >\n                <div className=\"Home2-step-number-container\">\n                  <div className=\"Home2-step-number\" style={{ backgroundColor: step.color }}>\n                    {step.number}\n                  </div>\n                </div>\n\n                <div className=\"Home2-step-icon-container\" style={{ color: step.color }}>\n                  {step.icon}\n                </div>\n\n                <h3 className=\"Home2-step-title\">{step.title}</h3>\n\n                <p className=\"Home2-step-description\">{step.description}</p>\n\n                <ul className=\"Home2-step-highlights\">\n                  {step.highlights.map((highlight, i) => (\n                    <li\n                      key={i}\n                      className=\"Home2-highlight-item Home2-animate-on-scroll\"\n                      style={{ animationDelay: `${0.6 + i * 0.1}s` }}\n                    >\n                      <ChevronRight size={14} style={{ color: step.color }} />\n                      <span>{highlight}</span>\n                    </li>\n                  ))}\n                </ul>\n\n                <div className=\"Home2-step-progress-indicator\" style={{ backgroundColor: step.color }} />\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Floating elements for visual interest */}\n        <div className=\"Home2-floating-element Home2-element-1\">\n          <Sparkles size={32} />\n        </div>\n\n        <div className=\"Home2-floating-element Home2-element-2\">\n          <Star size={24} />\n        </div>\n\n        <div className=\"Home2-floating-element Home2-element-3\">\n          <Award size={28} />\n        </div>\n      </section>\n\n      {/* Problem/Solution Section */}\n      <section className=\"Home2-problems-section\">\n        <div className=\"Home2-container\">\n          <h2 className=\"Home2-section-title\">Escape Inspection Frustrations</h2>\n\n          <div className=\"Home2-problems-grid\">\n            {[0, 1, 2].map((index) => (\n              <div key={index} className=\"Home2-problem-card Home2-animate-on-scroll\" style={{ animationDelay: `${index * 0.2}s` }}>\n                <div className=\"Home2-problem-icon\">\n                  {index === 0 ? (\n                    <Clipboard size={32} />\n                  ) : index === 1 ? (\n                    <AlertTriangle size={32} />\n                  ) : (\n                    <Clock size={32} />\n                  )}\n                </div>\n                <h3 className=\"Home2-problem-title\">\n                  {index === 0\n                    ? \"Static, Inflexible Paper or PDF Checklists?\"\n                    : index === 1\n                      ? \"Inconsistent Data During Inspections?\"\n                      : \"Hours Spent Compiling Inspection Reports?\"}\n                </h3>\n                <p className=\"Home2-problem-text\">\n                  {index === 0\n                    ? \"Design dynamic digital templates in minutes with drag-and-drop ease. Add logic, scoring, photos, signatures, and more – update instantly across all devices.\"\n                    : index === 1\n                      ? \"Ensure standardized, accurate data capture every time with required fields, conditional logic, and uniform templates pushed directly to the mobile app.\"\n                      : \"Generate comprehensive, professional reports automatically the moment an inspection is completed. Share instantly with stakeholders.\"}\n                </p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Features Tabs Section */}\n      <section className=\"Home2-features-section\" id=\"features\" ref={featuresRef}>\n        <div className=\"Home2-container\">\n          <h2 className=\"Home2-section-title\">Powering Your Inspections: Key Features</h2>\n\n          <div className=\"Home2-features-tabs\">\n            <div className=\"Home2-tabs-nav\">\n              {tabs.map((tab, index) => (\n                <button\n                  key={index}\n                  className={`Home2-tab-button ${activeTab === index ? \"Home2-active\" : \"\"} Home2-animate-on-scroll`}\n                  onClick={() => setActiveTab(index)}\n                  style={{\n                    animationDelay: `${index * 0.1}s`,\n                    opacity: 1,\n                    visibility: 'visible'\n                  }}\n                  onMouseEnter={enterButton}\n                  onMouseLeave={leaveHover}\n                >\n                  <span className=\"Home2-tab-icon\">{tab.icon}</span>\n                  <span className=\"Home2-tab-text\">{tab.title}</span>\n                </button>\n              ))}\n            </div>\n\n            <div className=\"Home2-tabs-content\">\n              <div className=\"Home2-tab-panel\">\n                <div className=\"Home2-tab-content Home2-animate-on-scroll\">\n                  <h3 className=\"Home2-tab-title\">{tabs[activeTab].contentTitle}</h3>\n                  <p className=\"Home2-tab-description\">{tabs[activeTab].description}</p>\n                  <a\n                    href=\"#learn-more\"\n                    className=\"Home2-btn Home2-btn-outline Home2-btn-sm Home2-btn-hover-effect\"\n                    onMouseEnter={enterButton}\n                    onMouseLeave={leaveHover}\n                  >\n                    Learn More <ArrowRight size={16} />\n                  </a>\n                </div>\n                <div className=\"Home2-tab-image Home2-animate-on-scroll\">\n                  <Image\n                    src={tabs[activeTab].image || \"/placeholder.svg\"}\n                    alt={tabs[activeTab].title}\n                    width={600}\n                    height={400}\n                    className=\"Home2-feature-img\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Stats Section */}\n      <section className=\"Home2-stats-section\" ref={statsRef}>\n        <div className=\"Home2-container\">\n          <h2 className=\"Home2-section-title\">Impact of Smarter Templates & Inspections</h2>\n\n          <div className=\"Home2-stats-grid\">\n            {stats.map((stat, index) => (\n              <div key={index} className=\"Home2-stat-card Home2-animate-on-scroll\" style={{ animationDelay: `${index * 0.1}s` }}>\n                <div className=\"Home2-stat-value\">{stat.value}</div>\n                <div className=\"Home2-stat-label\">{stat.label}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Template Builder Feature */}\n      <section className=\"Home2-template-feature\" id=\"template-builder\" ref={templateRef}>\n        <div className=\"Home2-container\">\n          <div className=\"Home2-feature-content\">\n            <div className={`Home2-feature-text Home2-animate-on-scroll ${templateVisible ? \"Home2-animate-in\" : \"\"}`}>\n              <h2 className=\"Home2-feature-title\">Build Intelligence Into Your Checklists</h2>\n              <p className=\"Home2-feature-description\">\n                Go beyond simple yes/no questions. Fashcognitive's template builder lets you implement sophisticated\n                logic. Make questions appear based on previous answers, calculate risk scores automatically, assign\n                weights, and guide inspectors through complex procedures.\n              </p>\n              <ul className=\"Home2-feature-list\">\n                <li className=\"Home2-feature-item Home2-animate-on-scroll\" style={{ animationDelay: \"0.2s\" }}>\n                  <Check size={20} className=\"Home2-check-icon\" />\n                  <span>Dynamic conditional logic (if/then)</span>\n                </li>\n                <li className=\"Home2-feature-item Home2-animate-on-scroll\" style={{ animationDelay: \"0.3s\" }}>\n                  <Check size={20} className=\"Home2-check-icon\" />\n                  <span>Automated scoring and weighting</span>\n                </li>\n                <li className=\"Home2-feature-item Home2-animate-on-scroll\" style={{ animationDelay: \"0.4s\" }}>\n                  <Check size={20} className=\"Home2-check-icon\" />\n                  <span>Embed instructional text, images, or videos</span>\n                </li>\n                <li className=\"Home2-feature-item Home2-animate-on-scroll\" style={{ animationDelay: \"0.5s\" }}>\n                  <Check size={20} className=\"Home2-check-icon\" />\n                  <span>Reusable template sections and version control</span>\n                </li>\n              </ul>\n              <a\n                href=\"#template-demo\"\n                className=\"Home2-btn Home2-btn-primary Home2-btn-hover-effect\"\n                onMouseEnter={enterButton}\n                onMouseLeave={leaveHover}\n              >\n                See Template Builder Demo\n              </a>\n            </div>\n\n            <div\n              className={`Home2-feature-image Home2-template-img-container Home2-animate-on-scroll ${templateVisible ? \"Home2-animate-in\" : \"\"}`}\n            >\n              <Image\n                src={HX}\n                alt=\"Template Builder\"\n                width={600}\n                height={500}\n                className=\"Home2-template-img\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Mobile App Feature */}\n      <section className=\"Home2-mobile-feature\" id=\"mobile-app\" ref={mobileRef}>\n        <div className=\"Home2-container\">\n          <div className=\"Home2-feature-content Home2-reverse\">\n            <div\n              className={`Home2-feature-image Home2-mobile-img-container Home2-animate-on-scroll ${mobileVisible ? \"Home2-animate-in\" : \"\"}`}\n            >\n              <Image\n                src={AZ}\n                alt=\"Mobile App\"\n                width={600}\n                height={500}\n                className=\"Home2-mobile-img\"\n              />\n            </div>\n\n            <div className={`Home2-feature-text Home2-animate-on-scroll ${mobileVisible ? \"Home2-animate-in\" : \"\"}`}>\n              <h2 className=\"Home2-feature-title\">Capture Rich, Actionable Data from the Field</h2>\n              <p className=\"Home2-feature-description\">\n                Empower your inspectors to capture more than just text. The StreamLineer mobile app allows for\n                attaching annotated photos, collecting signatures, recording precise GPS locations, scanning barcodes,\n                and adding detailed notes – all within the inspection form, even offline.\n              </p>\n              <ul className=\"Home2-feature-list\">\n                <li className=\"Home2-feature-item Home2-animate-on-scroll\" style={{ animationDelay: \"0.2s\" }}>\n                  <Check size={20} className=\"Home2-check-icon\" />\n                  <span>High-resolution photo capture with annotation tools</span>\n                </li>\n                <li className=\"Home2-feature-item Home2-animate-on-scroll\" style={{ animationDelay: \"0.3s\" }}>\n                  <Check size={20} className=\"Home2-check-icon\" />\n                  <span>Digital signature collection for sign-offs</span>\n                </li>\n                <li className=\"Home2-feature-item Home2-animate-on-scroll\" style={{ animationDelay: \"0.4s\" }}>\n                  <Check size={20} className=\"Home2-check-icon\" />\n                  <span>Automatic GPS stamping (optional)</span>\n                </li>\n                <li className=\"Home2-feature-item Home2-animate-on-scroll\" style={{ animationDelay: \"0.5s\" }}>\n                  <Check size={20} className=\"Home2-check-icon\" />\n                  <span>Seamless offline data storage and sync</span>\n                </li>\n              </ul>\n              <a\n                href=\"#mobile-demo\"\n                className=\"Home2-btn Home2-btn-primary Home2-btn-hover-effect\"\n                onMouseEnter={enterButton}\n                onMouseLeave={leaveHover}\n              >\n                See Mobile App Demo\n              </a>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Industries Section */}\n      <section className=\"Home2-industries-section\" ref={industriesRef}>\n        <div className=\"Home2-container\">\n          <h2 className=\"Home2-section-title\">Inspection Templates for Every Need</h2>\n\n          <div className=\"Home2-industries-grid\">\n            {industries.map((industry, index) => (\n              <div\n                key={index}\n                className={`Home2-industry-card Home2-animate-on-scroll ${index >= 5 ? 'Home2-last-row-card' : ''}`}\n                style={{\n                  animationDelay: `${index * 0.05}s`,\n                  ...(index >= 5 && { gridColumn: index === 5 ? '2 / 3' : index === 6 ? '3 / 4' : '4 / 5' })\n                }}\n                onMouseEnter={enterLink}\n                onMouseLeave={leaveHover}\n              >\n                <div className=\"Home2-industry-icon\">{industry.icon}</div>\n                <h3 className=\"Home2-industry-title\">{industry.title}</h3>\n                <div className=\"Home2-industry-arrow\">\n                  <ArrowUpRight size={18} />\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n\n\n      {/* FAQ Section */}\n      <section className=\"Home2-faq-section\">\n        <div className=\"Home2-container\">\n          <h2 className=\"Home2-section-title\">Your Questions About Templates & Inspections</h2>\n\n          <div className=\"Home2-faq-list\">\n            {faqs.map((faq, index) => (\n              <div\n                key={index}\n                className={`Home2-faq-item ${activeFaq === index ? \"Home2-active\" : \"\"} Home2-animate-on-scroll`}\n                style={{\n                  animationDelay: `${index * 0.1}s`,\n                  opacity: 1,\n                  visibility: 'visible',\n                  display: 'block'\n                }}\n              >\n                <button\n                  className=\"Home2-faq-question\"\n                  onClick={() => toggleFaq(index)}\n                  onMouseEnter={enterButton}\n                  onMouseLeave={leaveHover}\n                  style={{\n                    opacity: 1,\n                    visibility: 'visible'\n                  }}\n                >\n                  <span>{faq.question}</span>\n                  <div className={`Home2-faq-icon ${activeFaq === index ? \"Home2-rotate\" : \"\"}`}>\n                    <ChevronDown size={20} />\n                  </div>\n                </button>\n                <div className={`Home2-faq-answer ${activeFaq === index ? \"Home2-open\" : \"\"}`}>\n                  <p>{faq.answer}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"Home2-cta-section\" ref={ctaRef}>\n        <div className=\"Home2-container\">\n          <div className={`Home2-cta-content Home2-animate-on-scroll ${ctaVisible ? \"Home2-animate-in\" : \"\"}`}>\n            <h2 className=\"Home2-cta-title\">Ready to Revolutionize Your Inspection Process?</h2>\n            <p className=\"Home2-cta-text\">\n              Stop wrestling with paper and clunky software. Build intelligent templates and empower your team with\n              efficient mobile inspections using StreamLineer.\n            </p>\n            <div className=\"Home2-cta-buttons\">\n              <a\n                href=\"register\"\n                className=\"Home2-btn Home2-btn-primary Home2-btn-lg Home2-btn-hover-effect\"\n                onMouseEnter={enterButton}\n                onMouseLeave={leaveHover}\n              >\n                Start Building Templates Free\n              </a>\n              <a\n                href=\"#request-demo\"\n                className=\"Home2-btn Home2-btn-outline Home2-btn-lg Home2-btn-hover-effect\"\n                onMouseEnter={enterButton}\n                onMouseLeave={leaveHover}\n              >\n                Request a Demo\n              </a>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <footer className=\"Home2-footer\">\n        <div className=\"Home2-container\">\n          <div className=\"Home2-footer-top\">\n            <div className=\"Home2-footer-logo\">\n              <span className=\"Home2-logo-text\">STREAMLINEER</span>\n              <p className=\"Home2-footer-tagline\">Build Smart Checklists. Conduct Flawless Inspections.</p>\n            </div>\n\n            <div className=\"Home2-footer-columns\">\n              <div className=\"Home2-footer-column\">\n                <h3 className=\"Home2-footer-heading\">Product</h3>\n                <ul className=\"Home2-footer-links\">\n                  <li className=\"Home2-footer-link-item\">\n                    <a href=\"#template-builder\">Template Builder</a>\n                  </li>\n                  <li className=\"Home2-footer-link-item\">\n                    <a href=\"#mobile-app\">Mobile Inspections</a>\n                  </li>\n                  <li className=\"Home2-footer-link-item\">\n                    <a href=\"#reporting\">Reporting</a>\n                  </li>\n                  <li className=\"Home2-footer-link-item\">\n                    <a href=\"#actions\">Action Tracking</a>\n                  </li>\n                  <li className=\"Home2-footer-link-item\">\n                    <a href=\"#pricing\">Pricing</a>\n                  </li>\n                </ul>\n              </div>\n\n              <div className=\"Home2-footer-column\">\n                <h3 className=\"Home2-footer-heading\">Resources</h3>\n                <ul className=\"Home2-footer-links\">\n                  <li className=\"Home2-footer-link-item\">\n                    <a href=\"#blog\">Blog</a>\n                  </li>\n                  <li className=\"Home2-footer-link-item\">\n                    <a href=\"#guides\">Guides</a>\n                  </li>\n                  <li className=\"Home2-footer-link-item\">\n                    <a href=\"#webinars\">Webinars</a>\n                  </li>\n                  <li className=\"Home2-footer-link-item\">\n                    <a href=\"#case-studies\">Case Studies</a>\n                  </li>\n                  <li className=\"Home2-footer-link-item\">\n                    <a href=\"#help-center\">Help Center</a>\n                  </li>\n                </ul>\n              </div>\n\n              <div className=\"Home2-footer-column\">\n                <h3 className=\"Home2-footer-heading\">Company</h3>\n                <ul className=\"Home2-footer-links\">\n                  <li className=\"Home2-footer-link-item\">\n                    <a href=\"#about\">About Us</a>\n                  </li>\n                  <li className=\"Home2-footer-link-item\">\n                    <a href=\"#careers\">Careers</a>\n                  </li>\n                  <li className=\"Home2-footer-link-item\">\n                    <a href=\"#contact\">Contact</a>\n                  </li>\n                  <li className=\"Home2-footer-link-item\">\n                    <a href=\"#partners\">Partners</a>\n                  </li>\n                  <li className=\"Home2-footer-link-item\">\n                    <a href=\"#legal\">Legal</a>\n                  </li>\n                </ul>\n              </div>\n\n              <div className=\"Home2-footer-column\">\n                <h3 className=\"Home2-footer-heading\">Connect</h3>\n                <div className=\"Home2-social-links\">\n                  <a href=\"#twitter\" className=\"Home2-social-link\" onMouseEnter={enterLink} onMouseLeave={leaveHover}>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"24\"\n                      height=\"24\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"2\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    >\n                      <path d=\"M22 4s-.7 2.1-2 3.4c1.6 10-9.4 17.3-18 11.6 2.2.1 4.4-.6 6-2C3 15.5.5 9.6 3 5c2.2 2.6 5.6 4.1 9 4-.9-4.2 4-6.6 7-3.8 1.1 0 3-1.2 3-1.2z\"></path>\n                    </svg>\n                  </a>\n                  <a href=\"#linkedin\" className=\"Home2-social-link\" onMouseEnter={enterLink} onMouseLeave={leaveHover}>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"24\"\n                      height=\"24\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"2\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    >\n                      <path d=\"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z\"></path>\n                      <rect x=\"2\" y=\"9\" width=\"4\" height=\"12\"></rect>\n                      <circle cx=\"4\" cy=\"4\" r=\"2\"></circle>\n                    </svg>\n                  </a>\n                  <a href=\"#facebook\" className=\"Home2-social-link\" onMouseEnter={enterLink} onMouseLeave={leaveHover}>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"24\"\n                      height=\"24\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"2\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    >\n                      <path d=\"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z\"></path>\n                    </svg>\n                  </a>\n                  <a href=\"#instagram\" className=\"Home2-social-link\" onMouseEnter={enterLink} onMouseLeave={leaveHover}>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"24\"\n                      height=\"24\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"2\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    >\n                      <rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"5\" ry=\"5\"></rect>\n                      <path d=\"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z\"></path>\n                      <line x1=\"17.5\" y1=\"6.5\" x2=\"17.51\" y2=\"6.5\"></line>\n                    </svg>\n                  </a>\n                </div>\n                <div className=\"Home2-newsletter\">\n                  <h4 className=\"Home2-newsletter-title\">Subscribe to our newsletter</h4>\n                  <form className=\"Home2-newsletter-form\">\n                    <input type=\"email\" placeholder=\"Your email\" className=\"Home2-newsletter-input\" />\n                    <button\n                      type=\"submit\"\n                      className=\"Home2-newsletter-button\"\n                      onMouseEnter={enterButton}\n                      onMouseLeave={leaveHover}\n                    >\n                      Subscribe\n                    </button>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"Home2-footer-bottom\">\n            <p className=\"Home2-copyright\">© 2025 StreamLineer, Inc. All rights reserved.</p>\n            <div className=\"Home2-legal-links\">\n              <a href=\"#privacy\" onMouseEnter={enterLink} onMouseLeave={leaveHover}>\n                Privacy Policy\n              </a>\n              <a href=\"#terms\" onMouseEnter={enterLink} onMouseLeave={leaveHover}>\n                Terms of Service\n              </a>\n              <a href=\"#cookies\" onMouseEnter={enterLink} onMouseLeave={leaveHover}>\n                Cookie Policy\n              </a>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </div>\n  )\n}\n\nexport default Home2","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/Inspection.tsx",["96","97"],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/Create_template.tsx",["98","99","100","101","102","103","104"],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/garment-template.tsx",[],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/utils/api.ts",[],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/utils/csrf.ts",[],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/utils/aqlHelpers.ts",[],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/components/ConnectionsPanel.tsx",[],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/components/TemplateAssignmentManager.tsx",["105","106","107"],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/components/AccessManager.tsx",["108","109","110","111","112","113"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  User,\n  UserPlus,\n  Mail,\n  Shield,\n  Check,\n  X,\n  Edit2,\n  Trash2,\n  Search,\n  AlertCircle,\n  Info,\n  Copy,\n  ExternalLink,\n  Users\n} from 'lucide-react';\nimport './AccessManager.css';\n\n// Define permission types\nexport type PermissionLevel = 'owner' | 'admin' | 'editor' | 'viewer';\n\nexport interface UserPermission {\n  id: string;\n  name: string;\n  email: string;\n  avatar?: string;\n  permissionLevel: PermissionLevel;\n  status: 'active' | 'pending' | 'expired';\n  lastAccessed?: Date;\n}\n\nexport interface Connection {\n  id: string;\n  name: string;\n  email: string;\n  avatar?: string;\n  initials: string;\n  status: 'active' | 'pending' | 'declined';\n}\n\ninterface CurrentUser {\n  id: number;\n  username: string;\n  email: string;\n}\n\ninterface AccessManagerProps {\n  templateId: string;\n  templateTitle: string;\n  initialUsers?: UserPermission[];\n  onUpdatePermissions?: (users: UserPermission[]) => void;\n}\n\nconst generateId = () => Math.random().toString(36).substring(2, 9);\n\nconst getPermissionLabel = (level: PermissionLevel): string => {\n  switch (level) {\n    case 'owner':\n      return 'Owner';\n    case 'admin':\n      return 'Administrator';\n    case 'editor':\n      return 'Editor';\n    case 'viewer':\n      return 'Viewer';\n    default:\n      return 'Unknown';\n  }\n};\n\nconst getPermissionDescription = (level: PermissionLevel): string => {\n  switch (level) {\n    case 'owner':\n      return 'Full control including template deletion and ownership transfer';\n    case 'admin':\n      return 'Can edit template, manage users, and publish';\n    case 'editor':\n      return 'Can edit template content but cannot publish or manage users';\n    case 'viewer':\n      return 'Can only view and use the template';\n    default:\n      return '';\n  }\n};\n\nconst AccessManager: React.FC<AccessManagerProps> = ({\n  templateId,\n  templateTitle,\n  initialUsers = [],\n  onUpdatePermissions\n}) => {\n  const [currentUser, setCurrentUser] = useState<CurrentUser | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Fetch current user data\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/users/auth-status/', {\n          withCredentials: true\n        });\n        setCurrentUser(response.data.user);\n      } catch (error) {\n        console.error('Failed to fetch current user:', error);\n        // If we can't get the user from API, try to get from localStorage\n        const email = localStorage.getItem('username');\n        if (email) {\n          setCurrentUser({\n            id: 0,\n            username: email.split('@')[0],\n            email: email\n          });\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchCurrentUser();\n  }, []);\n\n  // Create default owner based on current user\n  const createDefaultOwner = (): UserPermission => {\n    return {\n      id: generateId(),\n      name: currentUser ? (currentUser.username || currentUser.email.split('@')[0]) : 'You',\n      email: currentUser ? currentUser.email : 'current.user@example.com',\n      permissionLevel: 'owner',\n      status: 'active',\n      lastAccessed: new Date()\n    };\n  };\n\n  const [users, setUsers] = useState<UserPermission[]>(\n    initialUsers.length > 0 ? initialUsers : [createDefaultOwner()]\n  );\n\n  // Update default owner when current user is loaded\n  useEffect(() => {\n    if (!isLoading && currentUser && initialUsers.length === 0) {\n      setUsers([createDefaultOwner()]);\n    }\n  }, [currentUser, isLoading, initialUsers.length]);\n\n  const [showInviteForm, setShowInviteForm] = useState(false);\n  const [newUserEmail, setNewUserEmail] = useState('');\n  const [newUserPermission, setNewUserPermission] = useState<PermissionLevel>('viewer');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [editingUserId, setEditingUserId] = useState<string | null>(null);\n  const [showShareLink, setShowShareLink] = useState(false);\n  const [shareLink, setShareLink] = useState('');\n  const [linkCopied, setLinkCopied] = useState(false);\n  const [showPermissionDetails, setShowPermissionDetails] = useState(false);\n  const [showConnectionsModal, setShowConnectionsModal] = useState(false);\n  const [inviteTab, setInviteTab] = useState<'email' | 'connections'>('email');\n\n  // Sample connections data for demonstration\n  // Map to store individual permission levels for each connection\n  const [connectionPermissions, setConnectionPermissions] = useState<Record<string, PermissionLevel>>({});\n\n  const [connections, setConnections] = useState<Connection[]>([\n    {\n      id: '1',\n      name: 'Grace Miller',\n      email: 'grace.miller@example.com',\n      initials: 'GM',\n      status: 'active'\n    },\n    {\n      id: '2',\n      name: 'John Martinez',\n      email: 'john.martinez@example.com',\n      initials: 'JM',\n      status: 'active'\n    },\n    {\n      id: '3',\n      name: 'Sarah Johnson',\n      email: 'sarah.johnson@example.com',\n      initials: 'SJ',\n      status: 'active'\n    },\n    {\n      id: '4',\n      name: 'Michael Brown',\n      email: 'michael.brown@example.com',\n      initials: 'MB',\n      status: 'active'\n    },\n    {\n      id: '5',\n      name: 'Emily Davis',\n      email: 'emily.davis@example.com',\n      initials: 'ED',\n      status: 'active'\n    }\n  ]);\n\n  // Generate a share link\n  useEffect(() => {\n    setShareLink(`https://fashcognitive.com/templates/share/${templateId}?token=${generateId()}`);\n  }, [templateId]);\n\n  // Update parent component when users change\n  useEffect(() => {\n    if (onUpdatePermissions) {\n      onUpdatePermissions(users);\n    }\n  }, [users, onUpdatePermissions]);\n\n  const handleAddUser = () => {\n    if (!newUserEmail.trim()) return;\n\n    // Check if user already exists\n    if (users.some(user => user.email.toLowerCase() === newUserEmail.toLowerCase())) {\n      alert('This user has already been invited.');\n      return;\n    }\n\n    const newUser: UserPermission = {\n      id: generateId(),\n      name: newUserEmail.split('@')[0], // Extract name from email\n      email: newUserEmail,\n      permissionLevel: newUserPermission,\n      status: 'pending'\n    };\n\n    setUsers([...users, newUser]);\n    setNewUserEmail('');\n    setNewUserPermission('viewer');\n    setShowInviteForm(false);\n  };\n\n  const handleAddConnection = (connection: Connection, permissionLevel: PermissionLevel) => {\n    // Check if connection already exists as a user\n    if (users.some(user => user.email.toLowerCase() === connection.email.toLowerCase())) {\n      alert('This user has already been invited.');\n      return;\n    }\n\n    const newUser: UserPermission = {\n      id: generateId(),\n      name: connection.name,\n      email: connection.email,\n      avatar: connection.avatar,\n      permissionLevel: permissionLevel,\n      status: 'pending'\n    };\n\n    setUsers([...users, newUser]);\n    setShowInviteForm(false);\n  };\n\n  // Initialize connection permissions with default values\n  useEffect(() => {\n    const newPermissions: Record<string, PermissionLevel> = {};\n    connections.forEach(connection => {\n      if (!connectionPermissions[connection.id]) {\n        newPermissions[connection.id] = 'viewer';\n      }\n    });\n\n    if (Object.keys(newPermissions).length > 0) {\n      setConnectionPermissions(prev => ({ ...prev, ...newPermissions }));\n    }\n  }, [connections, connectionPermissions]);\n\n  const handleConnectionPermissionChange = (connectionId: string, permissionLevel: PermissionLevel) => {\n    setConnectionPermissions(prev => ({\n      ...prev,\n      [connectionId]: permissionLevel\n    }));\n  };\n\n  // Filter connections that are not already users\n  const availableConnections = connections.filter(\n    connection => !users.some(user => user.email.toLowerCase() === connection.email.toLowerCase())\n  );\n\n  const handleUpdatePermission = (userId: string, permissionLevel: PermissionLevel) => {\n    setUsers(users.map(user =>\n      user.id === userId ? { ...user, permissionLevel } : user\n    ));\n    setEditingUserId(null);\n  };\n\n  const handleRemoveUser = (userId: string) => {\n    // Don't allow removing the owner\n    if (users.find(user => user.id === userId)?.permissionLevel === 'owner') {\n      alert('You cannot remove the owner of the template.');\n      return;\n    }\n\n    setUsers(users.filter(user => user.id !== userId));\n  };\n\n  const handleTransferOwnership = (userId: string) => {\n    // Find current owner and new owner\n    const currentOwner = users.find(user => user.permissionLevel === 'owner');\n    const newOwner = users.find(user => user.id === userId);\n\n    if (!currentOwner || !newOwner) return;\n\n    // Swap permissions\n    setUsers(users.map(user => {\n      if (user.id === currentOwner.id) {\n        return { ...user, permissionLevel: 'admin' };\n      }\n      if (user.id === userId) {\n        return { ...user, permissionLevel: 'owner' };\n      }\n      return user;\n    }));\n\n    setEditingUserId(null);\n  };\n\n  const copyShareLink = () => {\n    navigator.clipboard.writeText(shareLink);\n    setLinkCopied(true);\n    setTimeout(() => setLinkCopied(false), 2000);\n  };\n\n  // Filter users based on search term\n  const filteredUsers = users.filter(user =>\n    user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    user.email.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div className=\"access-manager\">\n      <div className=\"access-header\">\n        <h2>Manage Access</h2>\n        <p>Control who can view and edit \"{templateTitle}\"</p>\n      </div>\n\n      {isLoading && (\n        <div style={{ textAlign: 'center', padding: '20px' }}>\n          <p>Loading user information...</p>\n        </div>\n      )}\n\n      <div className=\"access-actions\">\n        <div className=\"search-container\">\n          <Search size={18} className=\"search-icon\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search users...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"search-input\"\n          />\n        </div>\n\n        <div className=\"action-buttons\">\n          <button\n            className=\"share-link-button\"\n            onClick={() => setShowShareLink(!showShareLink)}\n          >\n            <ExternalLink size={16} />\n            Share Link\n          </button>\n\n          <button\n            className=\"invite-button\"\n            onClick={() => setShowInviteForm(!showInviteForm)}\n          >\n            <UserPlus size={16} />\n            Invite User\n          </button>\n        </div>\n      </div>\n\n      {showShareLink && (\n        <div className=\"share-link-container\">\n          <div className=\"share-link-header\">\n            <h3>Share Template</h3>\n            <button className=\"close-button\" onClick={() => setShowShareLink(false)}>\n              <X size={16} />\n            </button>\n          </div>\n          <p>Anyone with this link can view this template:</p>\n          <div className=\"share-link-input\">\n            <input type=\"text\" value={shareLink} readOnly />\n            <button onClick={copyShareLink}>\n              <Copy size={16} />\n              {linkCopied ? 'Copied!' : 'Copy'}\n            </button>\n          </div>\n        </div>\n      )}\n\n      {showInviteForm && (\n        <div className=\"invite-form\">\n          <div className=\"invite-form-header\">\n            <h3>Invite User</h3>\n            <button className=\"close-button\" onClick={() => setShowInviteForm(false)}>\n              <X size={16} />\n            </button>\n          </div>\n\n          <div className=\"invite-tabs\">\n            <button\n              className={`invite-tab ${inviteTab === 'email' ? 'active' : ''}`}\n              onClick={() => setInviteTab('email')}\n            >\n              <Mail size={16} />\n              Email\n            </button>\n            <button\n              className={`invite-tab ${inviteTab === 'connections' ? 'active' : ''}`}\n              onClick={() => setInviteTab('connections')}\n            >\n              <Users size={16} />\n              My Connections\n            </button>\n          </div>\n\n          {inviteTab === 'email' ? (\n            <div className=\"tab-content\">\n              <div className=\"form-group\">\n                <label>Email Address</label>\n                <div className=\"email-input\">\n                  <Mail size={18} className=\"email-icon\" />\n                  <input\n                    type=\"email\"\n                    placeholder=\"Enter email address\"\n                    value={newUserEmail}\n                    onChange={(e) => setNewUserEmail(e.target.value)}\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <label>\n                  Permission Level\n                  <button\n                    className=\"info-button\"\n                    onClick={() => setShowPermissionDetails(!showPermissionDetails)}\n                  >\n                    <Info size={14} />\n                  </button>\n                </label>\n                <select\n                  value={newUserPermission}\n                  onChange={(e) => setNewUserPermission(e.target.value as PermissionLevel)}\n                >\n                  <option value=\"viewer\">Viewer</option>\n                  <option value=\"editor\">Editor</option>\n                  <option value=\"admin\">Administrator</option>\n                </select>\n              </div>\n\n              {showPermissionDetails && (\n                <div className=\"permission-details\">\n                  <div className=\"permission-item\">\n                    <h4>Viewer</h4>\n                    <p>Can view and use the template but cannot make changes</p>\n                  </div>\n                  <div className=\"permission-item\">\n                    <h4>Editor</h4>\n                    <p>Can edit template content but cannot publish or manage users</p>\n                  </div>\n                  <div className=\"permission-item\">\n                    <h4>Administrator</h4>\n                    <p>Can edit template, manage users, and publish</p>\n                  </div>\n                  <div className=\"permission-item\">\n                    <h4>Owner</h4>\n                    <p>Full control including template deletion and ownership transfer</p>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"invite-actions\">\n                <button className=\"cancel-button\" onClick={() => setShowInviteForm(false)}>Cancel</button>\n                <button\n                  className=\"send-invite-button\"\n                  onClick={handleAddUser}\n                  disabled={!newUserEmail.trim()}\n                >\n                  Send Invite\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div className=\"tab-content\">\n              <div className=\"form-group\">\n                <label>\n                  Permission Levels\n                  <button\n                    className=\"info-button\"\n                    onClick={() => setShowPermissionDetails(!showPermissionDetails)}\n                  >\n                    <Info size={14} />\n                  </button>\n                </label>\n                <p className=\"permission-hint\">Set permission level for each connection individually</p>\n              </div>\n\n              {showPermissionDetails && (\n                <div className=\"permission-details\">\n                  <div className=\"permission-item\">\n                    <h4>Viewer</h4>\n                    <p>Can view and use the template but cannot make changes</p>\n                  </div>\n                  <div className=\"permission-item\">\n                    <h4>Editor</h4>\n                    <p>Can edit template content but cannot publish or manage users</p>\n                  </div>\n                  <div className=\"permission-item\">\n                    <h4>Administrator</h4>\n                    <p>Can edit template, manage users, and publish</p>\n                  </div>\n                  <div className=\"permission-item\">\n                    <h4>Owner</h4>\n                    <p>Full control including template deletion and ownership transfer</p>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"connections-list-container\">\n                <h4 className=\"connections-list-title\">\n                  Select from your connections\n                  <span className=\"connections-count\">({availableConnections.length})</span>\n                </h4>\n\n                {availableConnections.length === 0 ? (\n                  <div className=\"no-connections-message\">\n                    <p>All your connections have already been invited to this template.</p>\n                  </div>\n                ) : (\n                  <div className=\"connections-select-list\">\n                    {availableConnections.map(connection => (\n                      <div key={connection.id} className=\"connection-select-item\">\n                        <div className=\"connection-info\">\n                          {connection.avatar ? (\n                            <img src={connection.avatar} alt={connection.name} className=\"connection-avatar\" />\n                          ) : (\n                            <div className=\"connection-initials\">{connection.initials}</div>\n                          )}\n                          <div className=\"connection-details\">\n                            <span className=\"connection-name\">{connection.name}</span>\n                            <span className=\"connection-email\">{connection.email}</span>\n                          </div>\n                        </div>\n                        <div className=\"connection-actions\">\n                          <select\n                            className=\"connection-permission-select\"\n                            value={connectionPermissions[connection.id] || 'viewer'}\n                            onChange={(e) => handleConnectionPermissionChange(connection.id, e.target.value as PermissionLevel)}\n                          >\n                            <option value=\"viewer\">Viewer</option>\n                            <option value=\"editor\">Editor</option>\n                            <option value=\"admin\">Admin</option>\n                          </select>\n                          <button\n                            className=\"add-connection-btn\"\n                            onClick={() => handleAddConnection(connection, connectionPermissions[connection.id] || 'viewer')}\n                          >\n                            Add\n                          </button>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n\n              <div className=\"invite-actions\">\n                <button className=\"cancel-button\" onClick={() => setShowInviteForm(false)}>Cancel</button>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      <div className=\"users-list-container\">\n        <div className=\"users-list-header\">\n          <div className=\"user-column\">User</div>\n          <div className=\"permission-column\">Permission</div>\n          <div className=\"status-column\">Status</div>\n          <div className=\"actions-column\">Actions</div>\n        </div>\n\n        <div className=\"users-list\">\n          {filteredUsers.length === 0 ? (\n            <div className=\"no-users\">\n              <AlertCircle size={24} />\n              <p>No users found matching \"{searchTerm}\"</p>\n            </div>\n          ) : (\n            filteredUsers.map(user => (\n              <div key={user.id} className=\"user-item\">\n                <div className=\"user-info\">\n                  <div className=\"user-avatar\">\n                    {user.avatar ? (\n                      <img src={user.avatar} alt={user.name} />\n                    ) : (\n                      <div className=\"avatar-placeholder\">\n                        {user.name.charAt(0).toUpperCase()}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"user-details\">\n                    <div className=\"user-name\">{user.name}</div>\n                    <div className=\"user-email\">{user.email}</div>\n                  </div>\n                </div>\n\n                <div className=\"user-permission\">\n                  {editingUserId === user.id ? (\n                    <select\n                      value={user.permissionLevel}\n                      onChange={(e) => handleUpdatePermission(user.id, e.target.value as PermissionLevel)}\n                      className=\"permission-select\"\n                    >\n                      <option value=\"viewer\">Viewer</option>\n                      <option value=\"editor\">Editor</option>\n                      <option value=\"admin\">Administrator</option>\n                      <option value=\"owner\">Owner (Transfer Ownership)</option>\n                    </select>\n                  ) : (\n                    <div className={`permission-badge ${user.permissionLevel}`}>\n                      <Shield size={14} />\n                      <span>{getPermissionLabel(user.permissionLevel)}</span>\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"user-status\">\n                  <div className={`status-badge ${user.status}`}>\n                    {user.status === 'active' && <Check size={14} />}\n                    {user.status === 'pending' && <Mail size={14} />}\n                    {user.status === 'expired' && <AlertCircle size={14} />}\n                    <span>{user.status.charAt(0).toUpperCase() + user.status.slice(1)}</span>\n                  </div>\n                </div>\n\n                <div className=\"user-actions\">\n                  {user.permissionLevel !== 'owner' && (\n                    <>\n                      {editingUserId === user.id ? (\n                        <button\n                          className=\"save-button\"\n                          onClick={() => setEditingUserId(null)}\n                        >\n                          <Check size={16} />\n                        </button>\n                      ) : (\n                        <button\n                          className=\"edit-button\"\n                          onClick={() => setEditingUserId(user.id)}\n                        >\n                          <Edit2 size={16} />\n                        </button>\n                      )}\n                      <button\n                        className=\"delete-button\"\n                        onClick={() => handleRemoveUser(user.id)}\n                      >\n                        <Trash2 size={16} />\n                      </button>\n                    </>\n                  )}\n                  {user.permissionLevel === 'owner' && (\n                    <div className=\"owner-badge\">\n                      <User size={14} />\n                      <span>Owner</span>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AccessManager;\n","/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/utils/aqlTables.ts",[],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/Schedule.tsx",["114"],"/Users/thilak/PythonFiles/Intern/safety_culture/fashcognitive-intern/frontend/src/pages/components/ScheduleInspectionModal.tsx",["115"],{"ruleId":"116","severity":1,"message":"117","line":12,"column":3,"nodeType":"118","messageId":"119","endLine":12,"endColumn":6},{"ruleId":"116","severity":1,"message":"120","line":13,"column":3,"nodeType":"118","messageId":"119","endLine":13,"endColumn":17},{"ruleId":"121","severity":1,"message":"122","line":345,"column":6,"nodeType":"123","endLine":345,"endColumn":19,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"125","line":307,"column":6,"nodeType":"123","endLine":307,"endColumn":33,"suggestions":"126"},{"ruleId":"121","severity":1,"message":"127","line":279,"column":34,"nodeType":"118","endLine":279,"endColumn":41},{"ruleId":"116","severity":1,"message":"128","line":290,"column":23,"nodeType":"118","messageId":"119","endLine":290,"endColumn":38},{"ruleId":"116","severity":1,"message":"129","line":291,"column":20,"nodeType":"118","messageId":"119","endLine":291,"endColumn":32},{"ruleId":"116","severity":1,"message":"130","line":294,"column":25,"nodeType":"118","messageId":"119","endLine":294,"endColumn":42},{"ruleId":"121","severity":1,"message":"131","line":594,"column":6,"nodeType":"123","endLine":594,"endColumn":8,"suggestions":"132"},{"ruleId":"121","severity":1,"message":"133","line":1261,"column":6,"nodeType":"123","endLine":1261,"endColumn":38,"suggestions":"134"},{"ruleId":"116","severity":1,"message":"135","line":10,"column":8,"nodeType":"118","messageId":"119","endLine":10,"endColumn":33},{"ruleId":"116","severity":1,"message":"136","line":36,"column":3,"nodeType":"118","messageId":"119","endLine":36,"endColumn":18},{"ruleId":"116","severity":1,"message":"137","line":51,"column":3,"nodeType":"118","messageId":"119","endLine":51,"endColumn":17},{"ruleId":"116","severity":1,"message":"138","line":193,"column":10,"nodeType":"118","messageId":"119","endLine":193,"endColumn":19},{"ruleId":"116","severity":1,"message":"139","line":2041,"column":10,"nodeType":"118","messageId":"119","endLine":2041,"endColumn":20},{"ruleId":"116","severity":1,"message":"140","line":2041,"column":22,"nodeType":"118","messageId":"119","endLine":2041,"endColumn":35},{"ruleId":"116","severity":1,"message":"141","line":2042,"column":10,"nodeType":"118","messageId":"119","endLine":2042,"endColumn":22},{"ruleId":"116","severity":1,"message":"142","line":6,"column":3,"nodeType":"118","messageId":"119","endLine":6,"endColumn":7},{"ruleId":"116","severity":1,"message":"143","line":7,"column":3,"nodeType":"118","messageId":"119","endLine":7,"endColumn":9},{"ruleId":"116","severity":1,"message":"144","line":15,"column":3,"nodeType":"118","messageId":"119","endLine":15,"endColumn":8},{"ruleId":"116","severity":1,"message":"145","line":73,"column":7,"nodeType":"118","messageId":"119","endLine":73,"endColumn":31},{"ruleId":"121","severity":1,"message":"146","line":145,"column":6,"nodeType":"123","endLine":145,"endColumn":51,"suggestions":"147"},{"ruleId":"116","severity":1,"message":"148","line":156,"column":10,"nodeType":"118","messageId":"119","endLine":156,"endColumn":30},{"ruleId":"116","severity":1,"message":"149","line":156,"column":32,"nodeType":"118","messageId":"119","endLine":156,"endColumn":55},{"ruleId":"116","severity":1,"message":"150","line":163,"column":23,"nodeType":"118","messageId":"119","endLine":163,"endColumn":37},{"ruleId":"116","severity":1,"message":"151","line":299,"column":9,"nodeType":"118","messageId":"119","endLine":299,"endColumn":32},{"ruleId":"116","severity":1,"message":"152","line":285,"column":9,"nodeType":"118","messageId":"119","endLine":285,"endColumn":29},{"ruleId":"116","severity":1,"message":"153","line":94,"column":13,"nodeType":"118","messageId":"119","endLine":94,"endColumn":27},"@typescript-eslint/no-unused-vars","'Eye' is defined but never used.","Identifier","unusedVar","'MoreHorizontal' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'endpointsToTry' and 'loggedInUser'. Either include them or remove the dependency array.","ArrayExpression",["154"],"React Hook useEffect has missing dependencies: 'checkAuthStatus' and 'endpointsToTry'. Either include them or remove the dependency array.",["155"],"The ref value 'ref.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'ref.current' to a variable inside the effect, and use that variable in the cleanup function.","'featuresVisible' is assigned a value but never used.","'statsVisible' is assigned a value but never used.","'industriesVisible' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchInspectorInfo' and 'templateLoaded'. Either include them or remove the dependency array.",["156"],"React Hook useEffect has missing dependencies: 'answers' and 'template'. Either include them or remove the dependency array.",["157"],"'TemplateAssignmentManager' is defined but never used.","'CornerDownRight' is defined but never used.","'ClipboardCheck' is defined but never used.","'getCookie' is defined but never used.","'templateId' is assigned a value but never used.","'setTemplateId' is assigned a value but never used.","'templateData' is assigned a value but never used.","'Mail' is defined but never used.","'Shield' is defined but never used.","'Users' is defined but never used.","'getPermissionDescription' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'createDefaultOwner'. Either include it or remove the dependency array.",["158"],"'showConnectionsModal' is assigned a value but never used.","'setShowConnectionsModal' is assigned a value but never used.","'setConnections' is assigned a value but never used.","'handleTransferOwnership' is assigned a value but never used.","'handleAssignTemplate' is assigned a value but never used.","'assignmentData' is assigned a value but never used.",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [currentUser, endpointsToTry, loggedInUser]",{"range":"169","text":"170"},"Update the dependencies array to be: [loggedInUser, currentUser, checkAuthStatus, endpointsToTry]",{"range":"171","text":"172"},"Update the dependencies array to be: [fetchInspectorInfo, templateLoaded]",{"range":"173","text":"174"},"Update the dependencies array to be: [answers, currentInspector, template, template.id]",{"range":"175","text":"176"},"Update the dependencies array to be: [currentUser, isLoading, initialUsers.length, createDefaultOwner]",{"range":"177","text":"178"},[11088,11101],"[currentUser, endpointsToTry, loggedInUser]",[9760,9787],"[loggedInUser, currentUser, checkAuthStatus, endpointsToTry]",[24420,24422],"[fetchInspectorInfo, templateLoaded]",[46587,46619],"[answers, currentInspector, template, template.id]",[3593,3638],"[currentUser, isLoading, initialUsers.length, createDefaultOwner]"]